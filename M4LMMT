         SYSSTATE ARCHLVL=2,OSREL=ZOSV1R8                               00000010
*        PRINT OFF                                                      00000020
         COPY  MLMVMMML                                                 00000030
         PRINT ON                                                       00000040
         COPY   IEABRC                                                  00000050
ICM      OPSYN ICMY                                                     00000060
L        OPSYN LY                                                       00000070
*&WAITTIME SETC  '5'                    Stimer interval 5 seconds       00000080
&stimer1  SETC  '24000000'              just after midnight refresh     00000090
&stimer2  SETC  '90000'                 interval quiet refresh stimer   00000100
&days     SETC  '31'                    expiry days warning limit       00000110
         PRINT  ON                                                      00000120
**********************************************************************  00000130
*                                                                    *  00000140
* ¸ Copyright 1982-2009 All Rights Reserved.                         *  00000150
* Macro 4 Limited - a division of UNICOM Systems, Inc.               *  00000160
*                                                                    *  00000170
* THE INFORMATION CONTAINED HEREIN CONSTITUTES AN UNPUBLISHED WORK   *  00000180
* OF MACRO 4 LIMITED - A DIVISION OF UNICOM SYSTEMS, INC. ALL RIGHTS *  00000190
* RESERVED. NO MATERIAL FROM THIS WORK MAY BE REPRINTED, COPIED,     *  00000200
* OR EXTRACTED WITHOUT WRITTEN PERMISSION OF MACRO 4 LIMITED.        *  00000210
*                                                                    *  00000220
**********************************************************************  00000230
**********************************************************************  00000240
M4LMMT TITLE 'Main task'                                                00000250
*                                                                       00000260
* Change Activity.                                                      00000270
*                                                                       00000280
* CID  level  when     who  what                                        00000290
*                                                                       00000300
*      1.100A 03/06/10 SA   NEW                                         00000310
* &sti 1.100A 25/06/10 SA   disable 15 minute stimer for refresh        00000320
*      2.100A 19/10/10 SA   get 1M of shared memory above the bar for   00000330
*                           usage counts                                00000340
*                                                                       00000350
*                                                                       00000360
*      FUNCTION                                                         00000370
*                                                                       00000380
*       This program builds the license object from the license files,  00000390
*       builds and publishes the PC routines used for license requests. 00000400
*                                                                       00000410
**********************************************************************  00000420
         SPACE 2                                                        00000430
M4LMMT    CEEENTRY AUTO=DSASIZE,        Storage required               +00000440
               PPA=PPA,                                                +00000450
               PARMREG=2,                                              +00000460
               BASE(11),                                               +00000470
               PLIST=OS                                                 00000480
         DROP  R11                                                      00000490
                                                                        00000500
         LARL  R11,STATIC                                               00000510
         USING (STATIC,STATIC_END),R11                                  00000520
         LMH   R0,R15,=16A(0) 
         M4ASDT ,&V,&M,                Throw an eye-catcher            +00000530
               FSTYR=2010,                                             +00000540
               CR=YES,                 Include Copyright               +00000550
               PI=SA                   The culprit                      00000560
               ago   .nodub                                             00000570
*                                                                       00000580
*  Dub subtasks as new processes when each issues its first z/OS UNIX   00000590
*  service call.                                                        00000600
*                                                                       00000610
         CALL  BPX1SDD,              Set effective group ID            +00000620
               (=A(DUBPROCESS),      Input: Set Dub Constant  BPXYCONS +00000630
               RETVAL,               Return value: 0 or -1             +00000640
               RETCODE,              Return code                       +00000650
               RSNCODE),             Reason code                       +00000660
               VL,MF=(E,PLIST2)                                         00000670
.nodub   anop                                                           00000680
*                                                                       00000690
*  Get the RSS stack for use by M4 common code                          00000700
*                                                                       00000710
         LA    R1,RSSB1                                                 00000720
         LARL  R15,RSSBUILD                                             00000730
         BAKR  R0,R15                  Build an M4 RSS stack            00000740
         ST    R13,4(,R15)             save LE save as RSS high save    00000750
         LR    R0,R13                                                   00000760
         LR    R13,R15                 switch to RSS                    00000770
         LR    R8,R13                                                   00000780
         LR    R7,R8                                                    00000790
         AHI   r7,4096                                                  00000800
         USING WORKAREA,R8,R7                                           00000810
         using twtoarea,twtowork                                        00000820
         ST    R0,LE_STACK                                              00000830
*                                                                       00000840
*  Initialise the anchor block                                          00000850
*                                                                       00000860
         USING LMAB,ANCHOR             Map anchor block                 00000870
         MVC   LMAB_EYECATCH,=C'LMANCHOR'   Eyecatcher                  00000880
         MVC   LMAB_NT_NAME,=CL16'M4LM_ANCHOR_TOKN'                     00000890
         MVC   LMAB_PID,=CL8'LMZ'      Eyecatcher                       00000900
         L     R15,PSATOLD-PSA         Get A(Current TCB)               00000910
         L     R15,TCBTIO-TCB(R15)     Get A(TIOT)                      00000920
         USING TIOT,R15                TIOT addressability              00000930
         MVC   LMAB_JOBNAME,TIOCNJOB   Store our jobname                00000940
         MVC   LMAB_SSID(8),=CL8' '                                     00000950
         MVC   LMAB_SSID,TIOCNJOB      Set subsystem id                 00000960
         DROP  R15                     Lose TIOT addressability         00000970
         L     R1,=V(M4LMLEVL)                                          00000980
         MVC   LMAB_LEVEL,=CL8' '                                       00000990
         MVC   LMAB_LEVEL(6),2(R1)                                      00001000
         MVC   @MOD2,=CL8' '                                            00001010
         MVC   @MOD2(4),8(R1)                                           00001020
         MVC   LMAB_SUBPOOL,=A(72,73)                                   00001030
         ST    R13,LMAB_RSSSAVE
                                                                        00001040
         USING RETPARMS,RETRYP         Map retry parameters             00001050
         ZEDCALL =A(SETPROGS)          Anchor program addresses         00001060
         LA    R0,17                                                    00001070
         BRAS  R14,MSGLIVE                                              00001080
         TM    FLCFACL-PSA,FLCFLD                                       00001090
         JO    CHECKZOS                                                 00001100
         LA    R0,31                                                    00001110
         BRAS  R14,MSGLIVE                                              00001120
         LHI   R15,16                                                   00001130
         J     EXIT                    No "long displacement facility"  00001140
CHECKZOS DS    0H                                                       00001150
         L     R15,CVTPTR                                               00001160
         USING CVT,R15                                                  00001170
         TM    CVTOSLV5,CVTZOS_V1R8                                     00001180
         JO    READPARM                                                 00001190
         DROP  R15                                                      00001200
         LA    R0,28                                                    00001210
         BRAS  R14,MSGLIVE                                              00001220
         LHI   R15,16                                                   00001230
         J     EXIT                    Bad z/OS release                 00001240
*                                                                       00001250
*  Get any parameters                                                   00001260
*                                                                       00001270
READPARM DS    0H                                                       00001280
         ZEDCALL =A(GETPARMS)          Parse parameters                 00001290
         LR    R2,R15                                                   00001300
         LTR   R2,R2                                                    00001310
         JZ    TESTAUTH                                                 00001320
         LA    R0,9                                                     00001330
         BRAS  R14,MSGLIVE                                              00001340
         LR    R15,R2                                                   00001350
         J     EXIT                    Bad parms                        00001360
*                                                                       00001370
*  Check APF authorized                                                 00001380
*                                                                       00001390
TESTAUTH DS    0H                                                       00001400
         TESTAUTH FCTN=1               Check for APF-authorization      00001410
         LTR   R15,R15                                                  00001420
         JZ    UNIQUE                                                   00001430
         LA    R0,1                                                     00001440
         BRAS  R14,MSGLIVE                                              00001450
         LA    R15,ENVIR_ERROR                                          00001460
         J     EXIT                                                     00001470
*                                                                       00001480
*  Check unique                                                         00001490
*                                                                       00001500
UNIQUE   DS    0H                                                       00001510
         MVC   ENQL,ENQPROT            Set up L-form ENQ                00001520
         ENQ   (LMAB_NT_NAME,LMAB_NT_NAME,                             +00001530
               E,L'LMAB_NT_NAME,SYSTEM),    ... Exclusive, System-Wide +00001540
               RET=USE,                                                +00001550
               MF=(E,ENQL)                                              00001560
         LTR   R15,R15                                                  00001570
         JZ    CHECK_SUBSYSTEM                                          00001580
         LA    R0,2                                                     00001590
         BRAS  R14,MSGLIVE                                              00001600
         LA    R15,ENVIR_ERROR                                          00001610
         J     EXIT                                                     00001620
*                                                                       00001630
*  Check the subsystem                                                  00001640
*                                                                       00001650
CHECK_SUBSYSTEM DS 0H                                                   00001660
         L     R15,LMAB_IEANTRT@        retrieve                        00001670
         CALL  (15),(NT_LVL,LMAB_NT_NAME,NT_TOKEN,NT_RETC),VL,         +00001680
               MF=(E,PLIST)                                             00001690
         MVC   OLD_DSGET@,NT_DSGET@                                     00001700
         XC    NT_DSGET@,NT_DSGET@                                      00001710
         ICM   R2,B'1111',OLD_DSGET@                                    00001720
         JZ    SKIPRESM                                                 00001730
*         J     SKIPRESM  ???                                           00001740
         USING DSGT,R2                                                  00001750
         CLC   =c'M4LMDSGT',DSGT_m4lmshrm                               00001760
         JE    SKIPRESM             Pre 2.1 version M4LMDSGT            00001770
         MVC   LMAB_M4LMREST@,DSGT_M4LMREST  extant task RESMGR exit@   00001780
         DROP  R2                                                       00001790
SKIPRESM DS    0H                                                       00001800
                                                                        00001810
         BRAS  R14,QUERY_SUBSYSTEM     query subsystem status           00001820
         LTR   R15,R15                                                  00001830
         JZ    SSVTSCAN                subsystem OK                     00001840
         LA    R15,ENVIR_ERROR                                          00001850
         J     EXIT                                                     00001860
*                                                                       00001870
*  Locate possible DR data                                              00001880
*                                                                       00001890
SSVTSCAN DS    0H                                                       00001900
         NC    NT_SS0A@,NT_SS0A@                                        00001910
         JZ    SSVTSC02                No N/T, so scan SSCVT            00001920
         MVC   OLD_SS0A@,NT_SS0A@      Use N/T value                    00001930
         J     COPY_OLD                                                 00001940
SSVTSC02 DS    0H                                                       00001950
         XC    OLD_SS0A@,OLD_SS0A@                                      00001960
         L     R15,FLCCVT-PSA                                           00001970
         USING CVT,R15                                                  00001980
         L     R14,CVTJESCT                                             00001990
         USING JESCT,R14                                                00002000
         L     R1,JESSSCT                                               00002010
         DROP  R15,R14                                                  00002020
         USING SSCT,R1                                                  00002030
         XC    DWORD,DWORD                                              00002040
         STM   R0,R15,RETREGS                                           00002050
         MVC   RETIND,=H'-1'                                            00002060
         MVC   RETADDR,=A(SSVTSC08)                                     00002070
         L     R2,LMAB_LMRC@                                            00002080
         ESTAEX (R2),TERM=YES,PARAM=RETPARMS,MF=(E,ESTAEXL)             00002090
         LM    R0,R15,RETREGS                                           00002100
SSVTSC04 DS    0H                                                       00002110
         STM   R0,R15,RETREGS                                           00002120
         ICM   R14,B'1111',SSCTSUSE                                     00002130
         JZ    SSVTSC08                                                 00002140
         USING SS0A,R14                                                 00002150
         CLC   SS0A_EYE,=CL8'M4LMSS0A'                                  00002160
         JNE   SSVTSC08                                                 00002170
         CLC   SS0A_STCK,DWORD                                          00002180
         JNH   SSVTSC08                                                 00002190
         MVC   DWORD,SS0A_STCK                                          00002200
         ST    R14,OLD_SS0A@                                            00002210
         DROP  R14                                                      00002220
SSVTSC08 DS    0H                                                       00002230
         ICM   R1,B'1111',SSCTSCTA                                      00002240
         JNZ   SSVTSC04                                                 00002250
         ESTAE 0                                                        00002260
         DROP  R1                                                       00002270
*                                                                       00002280
*  Set DR and DS alet from old SS0A                                     00002290
*                                                                       00002300
COPY_OLD        DS 0H                                                   00002310
         ICM   R14,B'1111',OLD_SS0A@                                    00002320
         JZ    SUPER                                                    00002330
         USING SS0A,R14                                                 00002340
         CLC   SS0A_EYE,=CL8'M4LMSS0A'                                  00002350
         JNE   SUPER                                                    00002360
         L     R1,SS0A_DR@                                              00002370
         LPR   R1,R1                                                    00002380
         SLL   R1,2                                                     00002390
         AR    R1,R14                                                   00002400
         MVC   DRCOPY,0(R1)                                             00002410
         MVC   AVL@COPY,SS0A_AVL@                                       00002420
         MVC   LMAB_DSALET,SS0A_DSALET                                  00002430
         DROP  R14                                                      00002440
*                                                                       00002450
*  Get into supervisor state                                            00002460
*                                                                       00002470
SUPER    DS    0H                                                       00002480
         MODESET MODE=SUP,KEY=ZERO                                      00002490
*                                                                       00002500
*  Specify a recovery routine                                           00002510
*                                                                       00002520
         LA    R15,ENVIR_ERROR                                          00002530
         STM   R0,R15,RETREGS                                           00002540
         STM   R0,R15,RETREGS2                                          00002550
         MVC   RETIND,=H'-1'                                            00002560
         MVC   RETADDR,=A(SHUTDOWN)                                     00002570
         L     R2,LMAB_LMRC@                                            00002580
         ESTAEX (R2),TERM=YES,PARAM=RETPARMS,MF=(E,ESTAEXL)             00002590
*                                                                       00002600
*  Load SRB, and ENF listener routines into ECSA                        00002610
*                                                                       00002620
         LOAD  EP=M4LMSR01,GLOBAL=(YES,P),EOM=YES                       00002630
         ST    R0,LMAB_SRBADDR1                                         00002640
         LR    R15,R0                                                   00002650
         USING SR01,R15                                                 00002660
         L     R0,SR01_M4LMSR02@                                        00002670
         ST    R0,LMAB_SRBADDR2                                         00002680
         L     R0,SR01_M4LMSR03@                                        00002690
         ST    R0,LMAB_SRBADDR3                                         00002700
         L     R0,SR01_M4LMSR04@                                        00002710
         ST    R0,LMAB_SRBADDR4                                         00002720
         L     R0,SR01_M4LMSR05@                                        00002730
         ST    R0,LMAB_SRBADDR5                                         00002740
         L     R0,SR01_M4LMENFL@                                        00002750
         ST    R0,LMAB_M4LMENFL@                                        00002760
         OI    LMAB_M4LMENFL@,X'80'                                     00002770
         DROP  R15                                                      00002780
         LR    R1,R0                                                    00002790
         USING ENFL,R1                                                  00002800
         LM    R2,R3,ENFL_ASCB@                                         00002810
         DROP  R1                                                       00002820
         MVC   0(4,R2),PSAAOLD-PSA(0)  init ASCB address in M4LMENFL    00002830
         LA    R0,LMAB_ENF61_ECB                                        00002840
         ST    R0,0(,R3)               init ECB address in M4LMENFL     00002850
*                                                                       00002860
*  Load routine runner PC CSA                                           00002870
*                                                                       00002880
         MVC   BLDLDENM,=CL8'M4LMPCPB'                                  00002890
         BRAS  R14,LOADCSA                                              00002900
         ST    R0,LMAB_M4LMPCPB@                                        00002910
         LR    R4,R0                                                    00002920
         LR    R3,R15                                                   00002930
*                                                                       00002940
*  Load RESMGR, SSI and dataspace retrieval routines into ECSA          00002950
*                                                                       00002960
         MVC   BLDLDENM,=CL8'M4LMDSGT'                                  00002970
         BRAS  R14,LOADCSA                                              00002980
         ST    R0,NT_DSGET@                                             00002990
         LR    R2,R15                   copy size                       00003000
         LR    R15,R0                                                   00003010
         USING DSGT,R15                                                 00003020
         STM   R3,R4,DSGT_M4LMPCPB                                      00003030
         ST    R15,LMAB_M4LMDSGT@                                       00003040
         ST    R2,DSGT_CSASIZE                                          00003050
         L     R0,DSGT_M4LMRESM                                         00003060
         ST    R0,LMAB_M4LMRESM@                                        00003070
         ST    R0,NT_RESM@                                              00003080
         L     R0,DSGT_M4LMSS0A                                         00003090
         ST    R0,NT_SS0A@                                              00003100
         ST    R0,LMAB_M4LMSS0A@                                        00003110
         OI    LMAB_M4LMSS0A@,X'80'                                     00003120
         L     R0,DSGT_M4LMPCSP                                         00003130
         ST    R0,LMAB_M4LMPCSP@                                        00003140
         L     R0,DSGT_M4LMPC8                                          00003150
         ST    R0,LMAB_LMPC8@                                           00003160
         ICM   R14,B'1111',OLD_DSGET@
         JZ    RESMGR_TEST
t        USING DSGT,R14
         CLI   t.DSGT_LEVEL+3,X'21'    at least 2.1?                    00007650
         JNE   RESMGR_TEST               no, assume version 1           00007660
         CLI   t.DSGT+3,X'28'          version 2.1 jump?                00007670
         JH    RESMGR_TEST               no, assume version 1           00007680
         CLC   t.DSGT_M4LMSMFT,=F'0'
         JE    RESMGR_TEST
         MVC   DSGT_M4LMSMFT,t.DSGT_M4LMSMFT  copy 
         DROP  R15,t                                                    00003170
*                                                                       00003180
*  Load task level RESMGR routine into ECSA                             00003190
*
RESMGR_TEST DS 0H                                                       00003200
         ICM   R15,B'1111',LMAB_M4LMREST@                               00003210
         JZ    RESMGR_LOAD                                              00003220
         CLC   54(6,R15),LMAB_LEVEL     
         JE    RESMGR_DONE
RESMGR_LOAD DS 0H                                                       00003250
         MVC   BLDLDENM,=CL8'M4LMREST'                                  00003260
         BRAS  R14,LOADCSA                                              00003270
         ST    R0,LMAB_M4LMREST@                                        00003280
RESMGR_DONE DS 0H                                                       00003290
         L     R15,NT_DSGET@                                            00003300
         USING DSGT,R15                                                 00003310
         MVC   DSGT_M4LMREST,LMAB_M4LMREST@                             00003320
         DROP  R15                                                      00003330
*                                                                       00003340
*  Set the command prefix and DR data in CSA                            00003350
*                                                                       00003360
         L     R2,LMAB_M4LMSS0A@                                        00003370
         USING SS0A,R2                                                  00003380
         MVC   SS0A_CPF(10),CPF        Init CPF parm value in M4LMSS0A  00003390
         STCKE DWORD
         MVC   SS0A_STCK,DWORD                                          00003400
         L     R1,SS0A_DR@                                              00003410
         LPR   R1,R1                                                    00003420
         SLL   R1,2                                                     00003430
         AR    R1,R2                                                    00003440
         MVC   0(LMDR_LEN,R1),DRCOPY                                    00003450
         MVC   SS0A_AVL@,AVL@COPY                                       00003460
         MVC   SS0A_DSALET,LMAB_DSALET                                  00003470
         NC    AVL@COPY,AVL@COPY       AVL already initialised?         00003480
         JNZ   GETSTOK                    yes                           00003490
         STORAGE OBTAIN,LENGTH=CSA_AVLL,SP=228,OWNER=SYSTEM,LOC=31      00003500
         ST    R1,SS0A_AVL@                                             00003510
         LR    R2,R1                                                    00003520
         DROP  R2                                                       00003530
         MVC   0(CSA_AVLL,R2),CSA_AVL                                   00003540
         M4AVL INIT,ANCHOR=(R2),MF=(E,avlp)                             00003550
*                                                                       00003560
*  Get the STOKEN of the master address space                           00003570
*                                                                       00003580
GETSTOK  DS    0H                                                       00003590
         LA    R1,1                                                     00003600
         LOCASCB ASID=(1)                                               00003610
       USING ASCB,R1                                                    00003620
         L     R1,ASCBASSB                                              00003630
       DROP  R1                                                         00003640
       USING ASSB,R1                                                    00003650
         MVC   LMAB_MSTR_STOKEN,ASSBSTKN                                00003660
       DROP  R1                                                         00003670
*                                                                       00003680
*  Publish LMAB for local work                                          00003690
*                                                                       00003700
PUBLISH  DS    0H                                                       00003710
         LA    R0,LMAB                                                  00003720
         ST    R0,NT_LMAB@                                              00003730
         L     R15,LMAB_IEANTCR@                                        00003740
         CALL  (15),(=A(IEANT_PRIMARY_LEVEL),=CL16'M4LMMT_LMAB',       x00003750
               NT_TOKEN,NT_NOPERS,NT_RETC),VL,MF=(E,PLIST)              00003760
         LTR   R15,R15                  Did it Work ?                   00003770
         JZ    *+8                       ... Yes                        00003780
         EX    R0,BANG                                                  00003790
*                                                                       00003800
*  Create a latch set with 2 latchs to synchronise license and DS usage 00003810
*                                                                       00003820
LATCH    DS    0H                                                       00003830
         call  isglcrt,(numberOfLatches,latchSetName,                  x00003840
               createOption,lmab_latchSetToken,returnCode),            x00003850
               VL,MF=(E,PLIST)                                          00003860
         TWTO  C'&M4SECT:ISGLCRT RC=',(XL4,returnCode),GEN=NO,         x00003870
               w=(twtoarea,twtoarea,500)                                00003880
*                                                                       00003890
*  get shared memory above the bar for product counts                   00003900
*                                                                       00003910
                                                                        00003920
         MVC   LMAB_USERTKN,=CL8'M4LMM4LM'                              00003930
         MVC   LMAB_SEGMENTS,=FD'1'                                     00003940
         LA    R0,LMAB_SHARED                                           00003950
         STG   R0,RLISTPTR                                              00003960
         ICM   R2,B'1111',OLD_DSGET@                                    00003970
         JZ    GETSHARED                                                00003980
         USING DSGT,R2                                                  00003990
*         J     GETSHARED    ???                                        00004000
         CLC   =c'M4LMDSGT',DSGT_m4lmshrm                               00004010
         JE    GETSHARED             pre 2.1 M4LMDSGT version           00004020
         MVC   LMAB_SHARED(16),DSGT_M4LMSHRM                            00004030
         DROP  R2                                                       00004040
         CLC   LMAB_SHARED,=D'0'                                        00004050
         JNE   SHAREMEMOBJ                                              00004060
GETSHARED DS   0H                                                       00004070
*         WTO   'GETSHARED'                                             00004080
                                                                        00004090
         IARV64 REQUEST=GETSHARED,                                     x00004100
               SEGMENTS=LMAB_SEGMENTS,                                 x00004110
               USERTKN=LMAB_USERTKN,                                   x00004120
               ORIGIN=LMAB_SHARED,                                     x00004130
               COND=NO,                                                x00004140
               FPROT=YES,                                              x00004150
               KEY==X'00',                                             x00004160
               CHANGEACCESS=LOCAL,                                     x00004170
               MF=(E,Iarv64,COMPLETE)                                   00004180
                                                                        00004190
SHAREMEMOBJ DS 0H                                                       00004200
         L     R2,LMAB_M4LMDSGT@                                        00004210
         USING DSGT,R2                                                  00004220
         MVC   DSGT_M4LMSHRM,LMAB_SHARED                                00004230
         L     R15,DSGT_M4LMENDP                                        00004240
         MVI   8(R15),X'00'                                             00004250
         TM    LMAB_SMFOPT,LMAB_SMFOPT_EndProduct                       00004260
         JNO   *+10                                                     00004270
         MVC   8(1,R15),LMAB_SMF#                                       00004280
         L     R2,LMAB_M4LMREST@                                        00004290
         DROP  R2                                                       00004300
         USING REST,R2                                                  00004310
         MVC   REST_M4LMSHRM,LMAB_SHARED                                00004320
         L     R15,REST_m4lmendp@                                       00004330
         MVI   8(R15),X'00'                                             00004340
         TM    LMAB_SMFOPT,LMAB_SMFOPT_EndProduct                       00004350
         JNO   *+10                                                     00004360
         MVC   8(1,R15),LMAB_SMF#                                       00004370
         DROP  R2                                                       00004380
*         WTO   'SHAREMEMOBJ'                                           00004390
         IARV64 REQUEST=SHAREMEMOBJ,                                   x00004400
               USERTKN=LMAB_USERTKN,                                   x00004410
               RANGLIST=RLISTPTR,                                      x00004420
               NUMRANGE=1,                                             x00004430
               ALETVALUE=0,                                            x00004440
               COND=YES,                                               x00004450
               SVCDUMPRGN=NO,                                          x00004460
               MF=(E,Iarv64,COMPLETE)                                   00004470
*                                                                       00004480
*  Call the license file read routine to read license into storage      00004490
*                                                                       00004500
         MODESET MODE=PROB,KEY=NZERO                                    00004510
         BRAS  R14,SET_DEBUG                                            00004520
         BRAS  R14,LICENSE_READER                                       00004530
         JZ    AXSET                                                    00004540
         LA    R15,ENVIR_ERROR                                          00004550
         J     SHUTDOWN                                                 00004560
                                                                        00004570
*                                                                       00004580
*  Set AX value to 1 to give full access to all address spaces          00004590
*                                                                       00004600
AXSET    DS    0H                                                       00004610
         MODESET MODE=SUP,KEY=ZERO                                      00004620
         LA    R2,1                                                     00004630
         AXSET AX=(2)                                                   00004640
*                                                                       00004650
*  Make this address space non-swapable                                 00004660
*                                                                       00004670
         SYSEVENT TRANSWAP                                              00004680
*                                                                       00004690
*  Add the address space level RESMGR                                   00004700
*                                                                       00004710
         XC    RM_PM,RM_PM                                              00004720
         EPAR  R1                       Get primary ASID                00004730
         LOCASCB ASID=(1)               Get A(our ASCB)                 00004740
         ST    R1,RM_PM_ASCB                                            00004750
         L     R3,LMAB_M4LMRESM@                                        00004760
         L     R2,4(,R3)                                                00004770
                                                                        00004780
       RESMGR ADD,TOKEN=(R2),TYPE=ADDRSPC,ASID=ALL,                    X00004790
               ROUTINE=(BRANCH,(R3)),PARAM=RM_PM,                      x00004800
               MF=(E,RESMGRL)                                           00004810
         LTR   R15,R15                                                  00004820
         JZ    *+8                                                      00004830
         EX    R0,BANG                                                  00004840
*                                                                       00004850
*  Make this address space non-cancelable                               00004860
*                                                                       00004870
         L     R2,PSATOLD-PSA                                           00004880
         L     R3,TCBJSTCB-TCB(R2)      Get A(Job Step TCB)             00004890
         SR    R4,R4                    Clear                           00004900
         ICM   R4,B'0111',TCBJSCBB-TCB(R3) Get A(JSCB)                  00004910
         L     R1,JSCBCSCB-IEZJSCB(R4)  Get A(CSCB)                     00004920
         NI    CHACT-CHAIN(R1),255-CHCL Reset 'cancelable' flag         00004930
*                                                                       00004940
*  Use LXRES to reserve a linkage index for system connections          00004950
*                                                                       00004960
         ICM   R4,B'1111',NT_PC#                                        00004970
         JNZ   GOTPC#                                                   00004980
         LA    R0,1                                                     00004990
         ST    R0,LXLIST                Set number to reserve           00005000
         LXRES LXLIST=LXLIST,SYSTEM=YES,MF=(E,LXRES)                    00005010
         L     R4,LXLIST+4                                              00005020
**** Note LX = PC number as EX is always zero(ie only 1 EX is connected 00005030
****      to each LX by this program                                    00005040
         SRL   R4,3                                                     00005050
         LCR   R4,R4                                                    00005060
         ST    R4,NT_PC#                                                00005070
*                                                                       00005080
*  Use ETDEF to build and modify the parameter list that ETCRE uses to  00005090
*  build a PC entry table.                                              00005100
*                                                                       00005110
GOTPC#   DS    0H                                                       00005120
         LCR   R4,R4                                                    00005130
         SLL   R4,3                                                     00005140
         ST    R4,LMAB_LMLX                                             00005150
         LA    R0,ETD                                                   00005160
         LA    R1,ETDEFLN                                               00005170
         LR    R15,R1                                                   00005180
         LA    R14,ETDEF                                                00005190
         MVCL  R0,R14                  Init ETDEF macros                00005200
         L     R2,LMAB_LMPC1@                                           00005210
         LA    R3,ANCHOR                                                00005220
         ETDEF TYPE=SET,                                               C00005230
               ETEADR=FIRST,                                           C00005240
               SSWITCH=YES,             Space switch                   C00005250
               AKM=(0:15),              Any key                        C00005260
               ROUTINE=(R2),            Routine address                C00005270
               RAMODE=31,                                              C00005280
               ASCMODE=AR,              Routine executes in AR ASC modeC00005290
               ARR=PCRECOVR,            Recovery routine address       C00005300
               EK=0,                    Routine runs in key zero       C00005310
               PARM1=(R3),              User parm 1                    C00005320
               STATE=SUPERVISOR         Routine in supervisor state     00005330
         L     R2,LMAB_LMPC2@                                           00005340
         ETDEF TYPE=SET,                                               C00005350
               ETEADR=SECOND,                                          C00005360
               SSWITCH=YES,             Space switch                   C00005370
               AKM=(0:15),              Any key                        C00005380
               ROUTINE=(R2),            Routine address                C00005390
               RAMODE=31,                                              C00005400
               ASCMODE=AR,              Routine executes in AR ASC modeC00005410
               ARR=PCRECOVR,            Recovery routine address       C00005420
               EK=0,                    Routine runs in key zero       C00005430
               PARM1=(R3),              User parm 1                    C00005440
               STATE=SUPERVISOR         Routine in supervisor state     00005450
         L     R2,LMAB_LMPC3@                                           00005460
         ETDEF TYPE=SET,                                               C00005470
               ETEADR=THIRD,                                           C00005480
               SSWITCH=YES,             Space switch                   C00005490
               AKM=(0:15),              Any key                        C00005500
               ROUTINE=(R2),            Routine address                C00005510
               RAMODE=31,                                              C00005520
               ASCMODE=AR,              Routine executes in AR ASC modeC00005530
               ARR=PCRECOVR,            Recovery routine address       C00005540
               EK=0,                    Routine runs in key zero       C00005550
               PARM1=(R3),              User parm 1                    C00005560
               STATE=SUPERVISOR         Routine in supervisor state     00005570
         L     R2,LMAB_LMPC4@                                           00005580
         ETDEF TYPE=SET,                                               C00005590
               ETEADR=FOURTH,                                          C00005600
               SSWITCH=YES,             Space switch                   C00005610
               AKM=(0:15),              Any key                        C00005620
               ROUTINE=(R2),            Routine address                C00005630
               RAMODE=31,                                              C00005640
               ASCMODE=AR,              Routine executes in AR ASC modeC00005650
               ARR=PCRECOVR,            Recovery routine address       C00005660
               EK=0,                    Routine runs in key zero       C00005670
               PARM1=(R3),              User parm 1                    C00005680
               STATE=SUPERVISOR         Routine in supervisor state     00005690
         L     R2,LMAB_LMPC5@                                           00005700
         ETDEF TYPE=SET,                                               C00005710
               ETEADR=FIFTH,                                           C00005720
               SSWITCH=NO,              no space switch                C00005730
               AKM=(0:15),              Any key                        C00005740
               ROUTINE=(R2),            Routine address                C00005750
               RAMODE=31,                                              C00005760
               ASCMODE=PRIMARY,         Routine executes in primary    C00005770
               ARR=PCRECOVR,            Recovery routine address       C00005780
               EK=0,                    Routine runs in key zero       C00005790
               PARM1=(R3),              User parm 1                    C00005800
               STATE=SUPERVISOR         Routine in supervisor state     00005810
         L     R2,LMAB_LMPC6@                                           00005820
         ETDEF TYPE=SET,                                               C00005830
               ETEADR=SIXTH,                                           C00005840
               SSWITCH=YES,             Space switch                   C00005850
               AKM=(0:15),              Any key                        C00005860
               ROUTINE=(R2),            Routine address                C00005870
               RAMODE=31,                                              C00005880
               ASCMODE=AR,              Routine executes AR ASC mode   C00005890
               ARR=PCRECOVR,            Recovery routine address       C00005900
               EK=0,                    Routine runs in key zero       C00005910
               PARM1=(R3),              User parm 1                    C00005920
               STATE=SUPERVISOR         Routine in supervisor state     00005930
         L     R2,LMAB_LMPC7@                                           00005940
         ETDEF TYPE=SET,                                               C00005950
               ETEADR=SEVENTH,                                         C00005960
               SSWITCH=YES,             Space switch                   C00005970
               AKM=(0:15),              Any key                        C00005980
               ROUTINE=(R2),            Routine address                C00005990
               RAMODE=31,                                              C00006000
               ASCMODE=AR,              Routine executes AR ASC mode   C00006010
               ARR=PCRECOVR,            Recovery routine address       C00006020
               EK=0,                    Routine runs in key zero       C00006030
               PARM1=(R3),              User parm 1                    C00006040
               STATE=SUPERVISOR         Routine in supervisor state     00006050
         L     R2,LMAB_LMPC8@                                           00006060
         ETDEF TYPE=SET,                                               +00006070
               ETEADR=EIGHTH,                                          +00006080
               AKM=(0:15),              Any key                        +00006090
               EK=0,                    key zero                       +00006100
               ROUTINE=(R2),            Routine address                +00006110
               RAMODE=31,                                              +00006120
               ASCMODE=PRIMARY,         Execute in Primary mode        +00006130
               PARM1=(R3),              User parm 1                    +00006140
               STATE=SUPERVISOR         Execute in Super state          00006150
         L     R2,LMAB_M4LMPCSP@                                        00006160
         ETDEF TYPE=SET,                                               +00006170
               ETEADR=NINETH,                                          +00006180
               AKM=(0:15),              Any key                        +00006190
               EK=0,                    key zero                       +00006200
               ROUTINE=(R2),            Routine address                +00006210
               ASCMODE=PRIMARY,         Execute in Primary mode        +00006220
               RAMODE=31,                                              +00006230
               PARM1=(R3),              User parm 1                    +00006240
               STATE=SUPERVISOR         Execute in Super state          00006250
         L     R2,LMAB_M4LMPCPB@                                        00006260
         ETDEF TYPE=SET,                                               +00006270
               ETEADR=TENTH,                                           +00006280
               AKM=(0:15),              Any key                        +00006290
               ROUTINE=(R2),            Second PC routine address      +00006300
               RAMODE=31,                                              +00006310
               ASCMODE=PRIMARY,         Execute in primary mode        +00006320
               PARM1=(R3),              User parm 1                    +00006330
               STATE=PROBLEM            Routine in PROBLEM state        00006340
         ETDEF TYPE=SET,                                               +00006350
               ETEADR=ELEVENTH,                                        +00006360
               AKM=(0:15),              Any key                        +00006370
               ROUTINE=(R2),            Second PC routine address      +00006380
               RAMODE=31,                                              +00006390
               ASCMODE=PRIMARY,         Execute in primary mode        +00006400
               PARM1=(R3),              User parm 1                    +00006410
               STATE=SUPERVISOR         Execute in Super state          00006420
         L     R2,=V(M4LMPC12)                                          00006430
         ETDEF TYPE=SET,                                               C00006440
               ETEADR=TWELTH,                                          C00006450
               SSWITCH=YES,             Space switch                   C00006460
               AKM=(0:15),              Any key                        C00006470
               ROUTINE=(R2),            Routine address                C00006480
               RAMODE=31,                                              C00006490
               ASCMODE=AR,              Routine executes AR ASC mode   C00006500
               ARR=PCRECOVR,            Recovery routine address       C00006510
               PARM1=(R3),              User parm 1                    C00006520
               STATE=SUPERVISOR         Routine in supervisor state     00006530
*                                                                       00006540
*  Use ETCRE to build a PC entry table. A token representing the        00006550
*  created table entry is returned in R0                                00006560
*                                                                       00006570
         ETCRE ENTRIES=ETD                                              00006580
*                                                                       00006590
*  Use ETCON to connect the previously created table entry to the       00006600
*  specified linkage table index                                        00006610
*                                                                       00006620
         ST    R0,TKLIST+4              Put 32 bit token in token list  00006630
         LA    R0,1                                                     00006640
         ST    R0,TKLIST                Set number of tokens in list    00006650
         ST    R0,LXLIST                Set number of linkage indexs    00006660
         ST    R4,LXLIST+4              Put linkage index value in list 00006670
         ETCON TKLIST=TKLIST,                                          c00006680
               LXLIST=LXLIST,MF=(E,ETCON)                               00006690
*                                                                       00006700
*  Update the SRB routine with the 2nd PC#                              00006710
*                                                                       00006720
         L     R0,LMAB_LMLX                                             00006730
         AHI   R0,1                                                     00006740
         L     R15,LMAB_SRBADDR1                                        00006750
         ST    R0,4(,R15)                                               00006760
*                                                                       00006770
*  Get storage for EXTRACT below the line                               00006780
*                                                                       00006790
         STORAGE OBTAIN,LENGTH=LENGTH24,LOC=BELOW                       00006800
         XC    0(LENGTH24,R1),0(R1)     Init gotten storage             00006810
         LR    R10,R1                   Put srorage address in R10      00006820
         USING DSECT24,R10              Make addressable                00006830
         EXTRACT ANSWER,FIELDS=COMM,MF=(E,EXTRACTL)                     00006840
         L     R9,ANSWER                Command scheduler comm list     00006850
         USING COM,R9                   Make addressable                00006860
         STORAGE RELEASE,LENGTH=LENGTH24,ADDR=(R10)                     00006870
         DROP  R10                                                      00006880
         QEDIT ORIGIN=COMCIBPT,CIBCTR=1 Set max to 1                    00006890
         QEDIT ORIGIN=COMCIBPT                                          00006900
*                                                                       00006910
*  Issue LISTEN Request for capacity changes                            00006920
*                                                                       00006930
ENFSTUFF DS    0H                                                       00006940
         MVC   ENFREQL,ENFPROT            Set up L-form ENFREQ          00006950
         L     R2,LMAB_M4LMENFL@                                        00006960
         ENFREQ ACTION=LISTEN,         -- Function                     +00006970
               CODE=ENFPC061,          -- Event Code 61                +00006980
               EXIT=(R2),              -- Exit Address                 +00006990
               ESTBNME==CL8'M4LMMT',   -- Establisher Name             +00007000
               EXITNME==CL8'M4LMENFL', -- Exit Name                    +00007010
               DTOKEN=DTOKEN,          -- Returned Token Field         +00007020
               EOT=YES,                                                +00007030
               EOM=YES,                                                +00007040
               MF=(E,ENFREQL)                                           00007050
         LTR   R15,R15                                                  00007060
         JZ    *+8                                                      00007070
         EX    R0,BANG                                                  00007080
ENFSKIP  DS    0H                                                       00007090
*                                                                       00007100
*  Back to problem state                                                00007110
*                                                                       00007120
         MODESET MODE=PROB,KEY=NZERO    Return to problem state         00007130
*                                                                       00007140
*  Activate the subsystem                                               00007150
*                                                                       00007160
         BAL   R14,READY_SUBSYSTEM                                      00007170
         LTR   R15,R15                                                  00007180
         JZ    SSOK                                                     00007190
         OI    LMAB_STOP_ECB,X'40'     tell LM to shut down             00007200
         J     WAIT                                                     00007210
*                                                                       00007220
*  Get the subsystem index value                                        00007230
*                                                                       00007240
SSOK     DS    0H                                                       00007250
         USING SSIB,WS_SSIB                                             00007260
         USING SSOB,WS_SSOB                                             00007270
         USING SSVSBGN,WS_SSVS                                          00007280
         MVC   SSIBID,=C'SSIB'        SSIB identity                     00007290
         MVC   SSIBLEN,=Y(SSIBSIZE)   SSIB length                       00007300
         MVC   SSIBSSNM,=C'MSTR'                                        00007310
         MVC   SSIBJBID,LMAB_SSID                                       00007320
         MVC   SSOBID,=C'SSOB'        SSOB identity                     00007330
         MVC   SSOBLEN,=Y(SSOBHSIZ)   SSOB header length                00007340
         MVC   SSOBFUNC,=Y(15)        SSI verify function               00007350
         LA    R0,WS_SSIB             @ SSIB                            00007360
         ST    R0,SSOBSSIB            @ SSIB into SSOB                  00007370
         LA    R0,WS_SSVS             @ SSVS                            00007380
         ST    R0,SSOBINDV            @ SSVS into SSOB                  00007390
         LA    R0,WS_SSOB             @ SSOB                            00007400
         ST    R0,WS_SSREQ_PARM       @ SSOB into parameter list        00007410
         MVC   SSVSLEN,=Y(SSVSSIZE)   SSVS length                       00007420
         OI    WS_SSREQ_PARM,X'80'    End flag on parm list             00007430
         LA    R1,WS_SSREQ_PARM                                         00007440
         IEFSSREQ                                                       00007450
         LR    R0,R15                                                   00007460
         A     R0,SSOBRETN                                              00007470
         JZ    SSOK2                                                    00007480
         ST    R15,@num1                                                00007490
         MVC   @num2,SSOBRETN                                           00007500
         LA    R0,24                                                    00007510
         BRAS  R14,MSGLIVE                                              00007520
         OI    LMAB_STOP_ECB,X'40'     tell LM to shut down             00007530
         J     WAIT                                                     00007540
SSOK2    DS    0H                                                       00007550
         MVC   LMAB_SSIX+2(2),SSVSNUM                                   00007560
         MVI   SUBSYSTEM_ACTIVE,C'Y'                                    00007570
*                                                                       00007580
*  Free any lingering ECSA routine storage                              00007590
*                                                                       00007600
         ICM   R2,B'1111',OLD_DSGET@                                    00007610
         JZ    DOCPF                   none                             00007620
         LA    R2,0(,R2)
         USING DSGT,R2                                                  00007630
         MODESET MODE=SUP,KEY=ZERO                                      00007640
         CLI   DSGT_LEVEL+3,X'21'      at least 2.1?                    00007650
         JNE   NOPCPB                    no, assume version 1           00007660
         CLI   DSGT+3,X'28'            version 2.1 jump?                00007670
         JH    NOPCPB                    no, assume version 1           00007680
         LM    R0,R1,DSGT_M4LMPCPB                                      00007690
         STORAGE RELEASE,LENGTH=(R0),SP=228,ADDR=(R1)                   00007700
         LR    R1,R2                                                    00007720
         L     R0,DSGT_CSASIZE                                          00007730
         AR    R1,R0
         C     R1,DSGT_M4LMSMFT         smf table within this dsgt?
         JNH   FREECSA                     no
         C     R2,DSGT_M4LMSMFT
         JH    FREECSA                     no
         L     R0,DSGT_M4LMSMFT         don't free smf table
         SR    R0,R2
FREECSA  DS    0H
         STORAGE RELEASE,LENGTH=(R0),SP=228,ADDR=(R2)                   00007750
         MODESET MODE=PROB,KEY=NZERO    Return to problem state         00007760
         J     DOCPF
NOPCPB   DS    0H                                                       00007710
         LR    R1,R2                                                    00007720
         L     R2,DSGT_CSASIZE                                          00007730
         DROP  R2                                                       00007740
         STORAGE RELEASE,LENGTH=(R2),SP=228,ADDR=(R1)                   00007750
         MODESET MODE=PROB,KEY=NZERO    Return to problem state         00007760
*                                                                       00007770
*  Register the command prefix                                          00007780
*                                                                       00007790
DOCPF    DS    0H                                                       00007800
         CLI   CPF+2,X'00'                                              00007810
         JE    INITOK                   no command prefix to register   00007820
         CPF REQUEST=DEFINE,                                           x00007830
               PREFIX=CPF+2,                                           x00007840
               OWNER=LMAB_SSID,                                        x00007850
               SCOPE=SYSPLEX,                                          x00007860
               FAILDISP=PURGE,                                         x00007870
               REMOVE=NO,                                              x00007880
               MF=(E,CPFLIST)                                           00007890
         LTR   R15,R15                                                  00007900
         JZ    INITOK                                                   00007910
         CHI   R15,4                                                    00007920
         JNE   DOCPFERR                                                 00007930
         CHI   R0,4                                                     00007940
         JNE   DOCPFERR                                                 00007950
         CPF REQUEST=DEFINE,                                           x00007960
               PREFIX=CPF+2,                                           x00007970
               OWNER=LMAB_SSID,                                        x00007980
               SCOPE=SYSTEM,                                           x00007990
               FAILDISP=PURGE,                                         x00008000
               REMOVE=NO,                                              x00008010
               MF=(E,CPFLIST)                                           00008020
         LTR   R15,R15                                                  00008030
         JZ    INITOK                                                   00008040
DOCPFERR DS    0H                                                       00008050
         ST    R15,@num1                                                00008060
         ST    R0,@num2                                                 00008070
         LA    R0,24                                                    00008080
         BRAS  R14,MSGLIVE                                              00008090
*???         OI    LMAB_STOP_ECB,X'40'     tell LM to shut down         00008100
*???         J     WAIT                                                 00008110
*                                                                       00008120
*  Delete and add a name/token pair to publish LX for PC-ss routines    00008130
*                                                                       00008140
INITOK   DS    0H                                                       00008150
         MODESET MODE=SUP,KEY=ZERO                                      00008160
         L     R15,LMAB_IEANTDL@        delete                          00008170
         CALL  (15),(NT_LVL,LMAB_NT_NAME,NT_RETC),VL,                  +00008180
               MF=(E,PLIST)                                             00008190
                                                                        00008200
         MVC   NT_RESM@,LMAB_M4LMRESM@                                  00008210
         L     R15,LMAB_IEANTCR@                                        00008220
         CALL  (15),(NT_LVL,LMAB_NT_NAME,NT_TOKEN,NT_PERS,NT_RETC),    +00008230
               VL,MF=(E,PLIST)                                          00008240
                                                                        00008250
         LTR   R15,R15                  Did it Work ?                   00008260
         JZ    *+8                       ... Yes                        00008270
         EX    R0,BANG                                                  00008280
         MODESET MODE=PROB,KEY=NZERO                                    00008290
         LA    R0,3                     Initialisation complete         00008300
         BRAS  R14,MSGLIVE                                              00008310
*                                                                       00008320
*  Set stimerm to initiate expiry days check every day                  00008330
*                                                                       00008340
         LARL  R2,STIMER_EXIT                                           00008350
         ST    R8,STIMER_PARM                                           00008360
         STIMERM SET,                  Set the STIMER                  +00008370
               ID=STIMER_ID,           Save its identity               +00008380
               LT==C'&stimer1',        pop at midnight                 +00008390
               WAIT=NO,                Don't hang for this             +00008400
               EXIT=(R2),              .. but take this exit point     +00008410
               PARM=STIMER_PARM,       .. and give him this parm       +00008420
               MF=(E,STIMERL)                                           00008430
*                                                                       00008440
*  Set stimerm to checksum the license every 15 minutes                 00008450
*                                                                       00008460
         LARL  R2,STIMER_EXIT2                                          00008470
         ST    R8,STIMER_PARM                                           00008480
         STIMERM SET,                  Set the STIMER                  +00008490
               ID=STIMER_ID2,          Save its identity               +00008500
               BINTVL==F'&stimer2',    Interval before 'pop'           +00008510
               WAIT=NO,                Don't hang for this             +00008520
               EXIT=(R2),              .. but take this exit point     +00008530
               PARM=STIMER_PARM,       .. and give him this parm       +00008540
               MF=(E,STIMERL)                                           00008550
*                                                                       00008560
*  Set stimerm for counts                                               00008570
*                                                                       00008580
         TIME  DEC,DWORD,LINKAGE=SYSTEM,MF=(E,TIME)                     00008590
         MVC   DWORD+6(1),DWORD                                         00008600
         MVI   DWORD+7,X'0F'                                            00008610
         XC    DWORD(6),DWORD                                           00008620
         CVB   R0,DWORD                                                 00008630
         AHI   R0,10                                                    00008640
         CHI   R0,240                                                   00008650
         JNH   *+8                                                      00008660
         LHI   R0,10                                                    00008670
         CVD   R0,DWORD                                                 00008680
         OI    DWORD+7,X'0F'                                            00008690
         UNPK  DWORD(3),DWORD+6(2)                                      00008700
         MVC   DWORD+2(6),=C'000000'                                    00008710
         LARL  R2,STIMER_EXIT3                                          00008720
         ST    R8,STIMER_PARM                                           00008730
         STIMERM SET,                  Set the STIMER                  +00008740
               ID=STIMER_ID3,          Save its identity               +00008750
               LT=DWORD,               pop on next hour                +00008760
               WAIT=NO,                Don't hang for this             +00008770
               EXIT=(R2),              .. but take this exit point     +00008780
               PARM=STIMER_PARM,       .. and give him this parm       +00008790
               MF=(E,STIMERL)                                           00008800
*                                                                       00008850
*  Wait for further instructions                                        00008860
*                                                                       00008870
WAIT     DS    0H                                                       00008880
         L     R15,COMECBPT                                             00008890
         LA    R0,LMAB_STOP_ECB                                         00008900
         LA    R1,LMAB_STIMER_ECB                                       00008910
         LA    R2,LMAB_CMDQ_ECB                                         00008920
         LA    R3,LMAB_ENF61_ECB                                        00008930
         LA    R4,LMAB_STIMER_ECB2                                      00008940
         LA    R5,SERVER_TECB                                           00008950
         STM   R15,R5,ECBLIST                                           00008960
         OI    ECBLIST+24,X'80'                                         00008970
         WAIT  1,ECBLIST=ECBLIST                                        00008980
         TM    SERVER_TECB,X'40'                                        00008990
         JNO   NOIPTERM                                                 00009000
         NI    SERVER_TECB,255-X'40'                                    00009010
         DETACH SERVER_TCB@,STAE=YES                                    00009020
         XC    SERVER_TCB@,SERVER_TCB@                                  00009030
         LA    R0,34                    IP server terminated            00009040
         BRAS  R14,MSGLIVE                                              00009050
         J     WAIT                                                     00009060
NOIPTERM DS    0H                                                       00009070
         TM    LMAB_STOP_ECB,X'40'      stopping?                       00009080
         JO    QUIESCE                    yes                           00009090
         L     R15,COMECBPT                                             00009100
         TM    0(R15),X'40'             Operator request?               00009110
         JNO   NOOPER                     no                            00009120
         L     R15,=A(OPERCMD)                                          00009130
         BASR  R14,R15                  Process operator request        00009140
         J     WAIT                                                     00009150
NOOPER   DS    0H                                                       00009160
         TM    LMAB_CMDQ_ECB,X'40'      SSI command?                    00009170
         JNO   NOSSICMD                   no                            00009180
         NI    LMAB_CMDQ_ECB,255-X'40'                                  00009190
         LARL  R15,SSICMD                                               00009200
         BASR  R14,R15                  Process SSI operator request    00009210
         J     WAIT                                                     00009220
NOSSICMD DS    0H                                                       00009230
         TM    LMAB_ENF61_ECB,X'40'     ENF 61?                         00009240
         JNO   NOENF61                    no                            00009250
         NI    LMAB_ENF61_ECB,255-X'40'                                 00009260
         CLI   LMAB_VERBOSE,C'N'                                        00009270
         JE    WAIT                                                     00009280
         LA    R0,27                                                    00009290
         BRAS  R14,MSGLIVE                                              00009300
         BRAS  R14,LICENSE_READER                                       00009310
         J     WAIT                                                     00009320
NOENF61  DS    0H                                                       00009330
         TM    LMAB_STIMER_ECB2,X'40'   Stimer exit counts post?        00009340
         JO    COUNTS_POST                yes                           00009350
         TM    LMAB_STIMER_ECB,X'40'    Stimer exit refresh post?       00009360
         JNO   WAIT                       no                            00009370
         NI    LMAB_STIMER_ECB,255-X'40'                                00009380
*                                                                       00009390
*  refresh the license                                                  00009400
*                                                                       00009410
         CLI   LMAB_STIMER_ECB+3,4      15 minute quiet refresh post?   00009420
         JL    QUIET_06                   no, just refresh              00009430
*                                                                       00009390
*  update the product timestamps in CSA every 15 minutes                00009400
*                                                                       00009410
         L     R3,LMAB_M4LMSS0A@                                        00003370
         USING SS0A,R3                                                  00003380
         L     R3,SS0A_AVL@ 
         DROP  R3
         LA    R2,=Y(2,0)
QUIET_02 DS 0H           
         M4AVL  SRCHHI,ANCHOR=(R3),KEY=(R2),KEYL=V,KEYO=10,            x
               RESULT=(R2),MF=(E,avlp)        
         LTR   R15,R15
         JNZ   QUIET_04
         AHI   R2,10                  point to key
*
*   Update extant product entry          
*
         LH    R14,0(,R2)             key length
         LA    R14,2(R14,R2)          point to data
         CLC   0(2,R14),=H'0'
         JNE   QUIET_02        ignore this entry
         STCKE DWORD
         MODESET MODE=SUP,KEY=ZERO    
         MVC   4(8,R14),DWORD         copy stck      
         MODESET MODE=PROB,KEY=NZERO                                    00009840
         J     QUIET_02          
QUIET_04 DS 0H          
         CLI   LMAB_STIMER_ECB+3,8    just update time stamps post?     00009420
         JE    WAIT                     yes                             00009430
         MVI   LMAB_QUIET,C'Y'
QUIET_06 DS 0H                   
         BRAS  R14,LICENSE_READER                                       00009450
         MVI   LMAB_QUIET,C'N'                                          00009460
         J     WAIT                                                     00009470
*                                                                       00009480
*  write the product counts                                             00009490
*                                                                       00009500
Counts_post ds 0h                                                       00009510
         NI    LMAB_STIMER_ECB2,255-X'40'                               00009520
         CLI   LMAB_STIMER_ECB2+3,4     hourly counts post?             00009530
         JE    hourly                                                   00009540
         BAS   R14,Daily_Counts         write daily counts              00009550
         j     wait                                                     00009560
hourly   ds    0h                                                       00009570
         BAS   R14,Hourly_Counts        write hourly counts             00009580
         j     wait                                                     00009590
                                                                        00009600
QUIESCE  DS    0H                                                       00009610
*                                                                       00009620
*  Prevent any more requests by deleting and adding the name/token      00009630
*                                                                       00009640
         NC    NT_RESM@,NT_RESM@        indicate inactive               00009650
         DOCC  NOTZERO                                                  00009660
         MODESET MODE=SUP,KEY=ZERO                                      00009670
         L     R15,LMAB_IEANTDL@                                        00009680
         CALL  (15),(NT_LVL,LMAB_NT_NAME,NT_RETC),VL,                  +00009690
               MF=(E,PLIST)                                             00009700
                                                                        00009710
         XC    NT_RESM@,NT_RESM@        indicate inactive               00009720
                                                                        00009730
         L     R15,LMAB_IEANTCR@                                        00009740
         CALL  (15),(NT_LVL,LMAB_NT_NAME,NT_TOKEN,NT_PERS,NT_RETC),    +00009750
               VL,MF=(E,PLIST)                                          00009760
                                                                        00009770
         LTR   R15,R15                  Did it Work ?                   00009780
         JZ    *+8                       ... Yes                        00009790
         EX    R0,BANG                                                  00009800
*                                                                       00009810
*  Prevent callers using latches                                        00009820
*                                                                       00009830
         MODESET MODE=PROB,KEY=NZERO                                    00009840
         DOCC  END                                                      00009850
                                                                        00009860
         XR    R2,R2                                                    00009870
*                                                                       00009880
*  Shutdown processing                                                  00009890
*                                                                       00009900
SHUTDOWN DS    0H                                                       00009910
         ST    R15,EXIT_RC                                              00009920
         ESTAEX 0                                                       00009930
         BAS   R14,Hourly_Counts        write counts                    00009940
         LA    R0,4                     Shutting down                   00009950
         MVC   @MOD2,=CL8'&M4SECT'                                      00009960
         BRAS  R14,MSGLIVE                                              00009970
*                                                                       00009980
         MODESET MODE=SUP,KEY=ZERO                                      00009990
*                                                                       00010000
*  Delete and add the Name/Token                                        00010010
*                                                                       00010020
         NC    NT_RESM@,NT_RESM@        stc active?                     00010030
         JZ    NONTOK                     no                            00010040
                                                                        00010050
         L     R15,LMAB_IEANTDL@                                        00010060
         CALL  (15),(NT_LVL,LMAB_NT_NAME,NT_RETC),VL,                  +00010070
               MF=(E,PLIST)                                             00010080
                                                                        00010090
         XC    NT_RESM@,NT_RESM@        indicate inactive               00010100
                                                                        00010110
         L     R15,LMAB_IEANTCR@                                        00010120
         CALL  (15),(NT_LVL,LMAB_NT_NAME,NT_TOKEN,NT_PERS,NT_RETC),    +00010130
               VL,MF=(E,PLIST)                                          00010140
                                                                        00010150
         LTR   R15,R15                  Did it Work ?                   00010160
         JZ    *+8                       ... Yes                        00010170
         EX    R0,BANG                                                  00010180
NONTOK   DS    0H                                                       00010190
*                                                                       00010200
*  delete resmgr                                                        00010210
*                                                                       00010220
         ICM   R3,B'1111',LMAB_M4LMRESM@                                00010230
         JZ    NORESMGR                                                 00010240
         USING RESM,R3                                                  00010250
         L     R3,RESM_TOKN                                             00010260
         DROP  R3                                                       00010270
         JZ    NORESMGR                                                 00010280
         CLC   0(4,R3),=F'0'                                            00010290
         JE    NORESMGR                RESMGR token zero                00010300
         RESMGR DELETE,TOKEN=(R3),                                     +00010310
               TYPE=ADDRSPC,ASID=ALL,                                  +00010320
               MF=(E,RESMGRL)                                           00010330
                                                                        00010340
         CH    R15,=H'4'                                                00010350
         JNH   *+8                                                      00010360
         EX    R0,BANG                                                  00010370
         XC    0(4,R3),0(R3)           clear RESMGR token               00010380
NORESMGR DS    0H                                                       00010390
*                                                                       00010400
*  Use ETDES to destroy entry table freeing LX for reuse                00010410
*                                                                       00010420
         NC    TKLIST+4,TKLIST+4                                        00010430
         JZ    NOETDES                                                  00010440
         ETDES TOKEN=TKLIST+4,                                         c00010450
               PURGE=YES,MF=(E,ETDES)                                   00010460
NOETDES  DS    0H                                                       00010470
         MODESET MODE=PROB,KEY=NZERO                                    00010480
*                                                                       00010490
*  Deactivate subsystem                                                 00010500
*                                                                       00010510
         CLI   SUBSYSTEM_ACTIVE,C'Y'                                    00010520
         DOCC  EQUAL                                                    00010530
         LA    R1,=CL8'DEACTIV'         ==> SSISERV function            00010540
         SR    R2,R2                    (No GET/PUTUSER1 arg)           00010550
         SR    R3,R3                                                    00010560
         MVI   SSI_MSG,C'Y'             Set 'Message on non-zero RC'    00010570
         BAL   R14,CALL_SSISERV         Go invoke SSI Services          00010580
         DOCC  END                                                      00010590
*                                                                       00010600
*  Cancel 24 hour stimerm                                               00010610
*                                                                       00010620
         NC    STIMER_ID,STIMER_ID     Did we start STIMERM?            00010630
         DOCC  NOTZERO                   yes                            00010640
         STIMERM CANCEL,               Cancel the STIMER               +00010650
               ID=STIMER_ID,           Identity from 'SET'             +00010660
               MF=(E,STIMERL)                                           00010670
         DOCC  END                                                      00010680
*                                                                       00010690
*  Cancel 15 minute stimerm                                             00010700
*                                                                       00010710
         NC    STIMER_ID2,STIMER_ID2   Did we start STIMERM?            00010720
         DOCC  NOTZERO                   yes                            00010730
         STIMERM CANCEL,               Cancel the STIMER               +00010740
               ID=STIMER_ID2,          Identity from 'SET'             +00010750
               MF=(E,STIMERL)                                           00010760
         DOCC  END                                                      00010770
*                                                                       00010780
*  Detach listener task                                                 00010790
*                                                                       00010800
         NC    SERVER_TCB@,SERVER_TCB@                                  00010810
         DOCC  NOTZERO                                                  00010820
         WAIT  ECB=SERVER_TECB                                          00010830
         DETACH SERVER_TCB@,STAE=YES                                    00010840
         DOCC  END                                                      00010850
         L     R15,EXIT_RC                                              00010860
EXIT     DS    0H                                                       00010870
         LR    R2,R15                                                   00010880
         L     R3,RSSB1A               Load A(1st RSSB)                 00010890
         M4RSSR FREESTACK,             Free 'extra' M4RSSBs            +00010900
               RSSB=(R3),              .. hung off 1st M4RSSB          +00010910
               VERSION=2,              Get the latest & greatest       +00010920
               ROUTE=LMAB_M4RSSFRS@    M4RSSFRS is vectored             00010930
         LR    R15,R2                  Set return code zero             00010940
         L     R13,4(,R13)                                              00010950
         CEETERM  RC=(R15),MF=(E,CEETERM)                               00010960
         DROP                                                           00010970
RECOVERY DS    0H                                                       00010980
         CHI   R0,12                   Got an SDWA?                     00010990
         JE    NOSDWA                    no                             00011000
         STM   R14,R12,12(R13)         Save registers on entry          00011010
         LR    R2,R1                   Put SDWA address in R2           00011020
         USING SDWA,R2                 Make SDWA addressable            00011030
         LARL  R11,STATIC                                               00011040
         USING (STATIC,STATIC_END),R11                                  00011050
         L     R3,SDWAPARM             Get address of passed parms      00011060
         L     R3,0(,R3)                                                00011070
TEMP     USING RETPARMS,R3                                              00011080
         L     R4,TEMP.RETADDR                                          00011090
         C     R4,=A(SSVTSC08)                                          00011100
         JE    NODUMP                                                   00011110
         SETRP WKAREA=(R2),                                            +00011120
               RC=4,                   Tell RTM to use retry address   +00011130
               FRESDWA=YES,                                            +00011140
               RETADDR=(R4),            (Passed by ESTAE issuer)       +00011150
               RETREGS=YES,            Give back the registers         +00011160
               RUB=TEMP.RETRUB,          indicated in the RUB          +00011170
               DUMP=YES                                                 00011180
         L     R14,12(R13)                                              00011190
         BR    R14                                                      00011200
NODUMP   DS    0H                                                       00011210
         SETRP WKAREA=(R2),                                            +00011220
               RC=4,                   Tell RTM to use retry address   +00011230
               FRESDWA=YES,                                            +00011240
               RETADDR=(R4),            (Passed by ESTAE issuer)       +00011250
               RETREGS=YES,            Give back the registers         +00011260
               RUB=TEMP.RETRUB,          indicated in the RUB          +00011270
               DUMP=NO                                                  00011280
         L     R14,12(R13)                                              00011290
         BR    R14                                                      00011300
         DROP  TEMP                                                     00011310
PERCOLAT DS    0H                                                       00011320
         SETRP WKAREA=(R2),                                            +00011330
               RC=0,                                                   +00011340
               DUMP=YES                                                 00011350
         L     R14,12(R13)                                              00011360
         BR    R14                                                      00011370
         DROP                                                           00011380
PCRECOVR DS    0H                                                       00011390
         CHI   R0,12                    Got an SDWA?                    00011400
         JE    NOSDWA                     no                            00011410
         SAC   0                                                        00011420
         STM   R14,R12,12(R13)          Save registers on entry         00011430
         LR    R2,R1                    Put SDWA address in R2          00011440
         USING SDWA,R2                 Make SDWA addressable            00011450
         LARL  R3,PCERR                                                 00011460
         SETRP WKAREA=(R2),RC=4,RETADDR=(R3),RETREGS=YES,DUMP=YES,     x00011470
               FRESDWA=YES                                              00011480
         L     R14,12(R13)                                              00011490
         BR    R14                                                      00011500
NOSDWA   DS    0H                                                       00011510
         SR    R15,R15                                                  00011520
         BR    R14                                                      00011530
PCERR    DS    0H                                                       00011540
         LA    R15,101                                                  00011550
         PR                                                             00011560
         DROP                                                           00011570
*                                                                       00011580
*  stimer exit driven at midnight to refresh the license                00011590
*                                                                       00011600
STIMER_EXIT SAVE (14,12),,*                                             00011610
         USING (STATIC,STATIC_END),R11                                  00011620
         LARL  R11,STATIC                                               00011630
         LLGT  R8,4(,R1)                                                00011640
         LGR   R7,R8                                                    00011650
         AHI   r7,4096                                                  00011660
         USING WORKAREA,R8,R7                                           00011670
         USING LMAB,ANCHOR             Map anchor block                 00011680
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00011690
         DOCC  EQUAL                                                    00011700
         WTO   '&M4SECT:STIMER EXIT 1'                                  00011710
         DOCC  END                                                      00011720
         ST    R8,STIMER_PARM                                           00011730
         STIMERM SET,WAIT=YES,ID=STIMER_ID,BINTVL==F'100',  1sec       x00011740
               MF=(E,STIMERL)                                           00011750
         POST  LMAB_STIMER_ECB,0                                        00011760
         LARL  R2,STIMER_EXIT                                           00011770
         STIMERM SET,                  Set the STIMER                  +00011780
               ID=STIMER_ID,           Save its identity               +00011790
               LT==C'&stimer1',        pop at midnight                 +00011800
               WAIT=NO,                Don't hang for this             +00011810
               EXIT=(R2),              .. but take this exit point     +00011820
               PARM=STIMER_PARM,       .. and give him this parm       +00011830
               MF=(E,STIMERL)                                           00011840
         RETURN (14,12),T                                               00011850
         DROP                                                           00011860
*                                                                       00011870
*  stimer exit driven everty 15 minutes to swap the storage subpool     00011880
*  number used by LM requestors and free an entire subpool to help      00011890
*  prevent storage creep, then check the license object. Also updates   00011900
*  product timestamp in CSA.
*                                                                       00011910
STIMER_EXIT2 SAVE (14,12),,*                                            00011920
         USING (STATIC,STATIC_END),R11                                  00011930
         LARL  R11,STATIC                                               00011940
         LLGT  R8,4(,R1)                                                00011950
         LGR   R7,R8                                                    00011960
         AHI   r7,4096                                                  00011970
         USING WORKAREA,R8,R7                                           00011980
         USING LMAB,ANCHOR             Map anchor block                 00011990
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00012000
         DOCC  EQUAL                                                    00012010
         WTO   '&M4SECT:STIMER EXIT 2'                                  00012020
         DOCC  END                                                      00012030
         LM    R2,R3,LMAB_SUBPOOL                                       00012040
         STORAGE RELEASE,SP=(R3)                                        00012050
         ST    R3,LMAB_SUBPOOL                                          00012060
         ST    R2,LMAB_SUBPOOL+4                                        00012070
         LM    R14,R15,LMAB_LICENSE                                     00012080
         XR    R1,R1                                                    00012090
CKSM2    CKSM  R1,R14                                                   00012100
         BRC   1,CKSM2                                                  00012110
         C     R1,CHECKSUM                                              00012120
         LHI   R2,8                    update product time stamps
         JE    STIMER2_EXIT                                             00012130
         LHI   R2,4                    quiet refresh
STIMER2_EXIT DS 0H                                                      00012150         
         POST  LMAB_STIMER_ECB,(R2)                                     00012140
         ST    R8,STIMER_PARM                                           00012160
         LARL  R2,STIMER_EXIT2                                          00012170
         STIMERM SET,                  Set the STIMER                  +00012180
               ID=STIMER_ID2,          Save its identity               +00012190
               BINTVL==F'&stimer2',    Interval before 'pop' 15 mins   +00012200
               WAIT=NO,                Don't hang for this             +00012210
               EXIT=(R2),              .. but take this exit point     +00012220
               PARM=STIMER_PARM,       .. and give him this parm       +00012230
               MF=(E,STIMERL)                                           00012240
         RETURN (14,12),T                                               00012250
         DROP                                                           00012260
*                                                                       00012270
*  stimer exit driven hourly to post for hourly product usage counts    00012280
*                                                                       00012290
STIMER_EXIT3 SAVE (14,12),,*                                            00012300
         USING (STATIC,STATIC_END),R11                                  00012310
         LARL  R11,STATIC                                               00012320
         LLGT  R8,4(,R1)                                                00012330
         LGR   R7,R8                                                    00012340
         AHI   r7,4096                                                  00012350
         USING WORKAREA,R8,R7                                           00012360
         USING LMAB,ANCHOR             Map anchor block                 00012370
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00012380
         DOCC  EQUAL                                                    00012390
         WTO   '&M4SECT:STIMER EXIT 3'                                  00012400
         DOCC  END                                                      00012410
         TIME  DEC,DWORD,LINKAGE=SYSTEM,MF=(E,TIME)                     00012420
         LHI   R2,4                    set hourly counts post           00012430
         CLC   DWORD(1),=X'00'         Midnight?                        00012440
         JNE   *+6                       no                             00012450
         XR    R2,R2                   set daily counts post            00012460
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00012470
         DOCC  EQUAL                                                    00012480
         wto   'posting counts'                                         00012490
         DOCC  END                                                      00012500
         POST  LMAB_STIMER_ECB2,(R2)                                    00012510
         MVC   DWORD+6(1),DWORD                                         00012520
         MVI   DWORD+7,X'0F'                                            00012530
         XC    DWORD(6),DWORD                                           00012540
         CVB   R0,DWORD                                                 00012550
         AHI   R0,10                                                    00012560
         CHI   R0,240                                                   00012570
         JNH   *+8                                                      00012580
         LHI   R0,10                                                    00012590
         CVD   R0,DWORD                                                 00012600
         OI    DWORD+7,X'0F'                                            00012610
         UNPK  DWORD(3),DWORD+6(2)                                      00012620
         MVC   DWORD+2(6),=C'000000'                                    00012630
         LARL  R2,STIMER_EXIT3                                          00012640
         ST    R8,STIMER_PARM                                           00012650
         STIMERM SET,                  Set the STIMER                  +00012660
               ID=STIMER_ID3,          Save its identity               +00012670
               LT=DWORD,               pop on next hour                +00012680
               WAIT=NO,                Don't hang for this             +00012690
               EXIT=(R2),              .. but take this exit point     +00012700
               PARM=STIMER_PARM,       .. and give him this parm       +00012710
               MF=(E,STIMERL)                                           00012720
         RETURN (14,12),T                                              
         DROP                                                           00012740
*                                                                       00012750
*  Load a routine into ECSA                                             00012760
*                                                                       00012770
LOADCSA  DS    0H                                                       00012780
         BAKR  R14,R0                                                   00012790
         USING WORKAREA,R8,R7                                           00012800
         USING (STATIC,STATIC_END),R11                                  00012810
         MVC   BLDLNENT,=H'1'                                           00012820
         LA    R0,L'BLDLDE                                              00012830
         STH   R0,BLDLDELN                                              00012840
                                                                        00012850
         L     R3,CVTPTR                                                00012860
         USING CVT,R3                                                   00012870
                                                                        00012880
         L     R4,CVTTCBP                                               00012890
         L     R4,4(,R4)                                                00012900
         USING TCB,R4                                                   00012910
         ICM   R5,B'1111',TCBJLB        Get any JOB/STEPLIB DCB         00012920
         BNZ   LOAD_120                  ... Got one - look there       00012930
         DROP  R4                                                       00012940
                                                                        00012950
LOAD_100 DS    0H                                                       00012960
         ICM   R5,B'1111',CVTLINK       Get LINKLIB DCB                 00012970
         JNZ   LOAD_120                                                 00012980
         EX    R0,BANG                                                  00012990
LOAD_120 DS    0H                                                       00013000
         BLDL  (R5),BLDLLIST            Get BLDL D.E filled in          00013010
         LTR   R15,R15                  Successful ?                    00013020
         BZ    LOAD_200                  ... Yes - continue             00013030
         CL    R5,CVTLINK               Already tried LINKLIB ?         00013040
         BNE   LOAD_100                  ... No - try it now            00013050
         EX    R0,BANG                                                  00013060
         DROP  R3                                                       00013070
LOAD_200 DS    0H                                                       00013080
         SLR   R2,R2                                                    00013090
         ICM   R2,B'0111',BLDLESIZ      program size                    00013100
         TM    BLDLEMOD,BLDLRANY        RMODE-ANY?                      00013110
         JNO   LOAD_240                   no                            00013120
         STORAGE OBTAIN,LENGTH=(R2),SP=228,OWNER=SYSTEM,LOC=31          00013130
         J     LOAD_260                                                 00013140
LOAD_240 DS    0H                                                       00013150
         STORAGE OBTAIN,LENGTH=(R2),SP=228,OWNER=SYSTEM,LOC=24          00013160
LOAD_260 DS    0H                                                       00013170
         LR    R4,R1                                                    00013180
         LA    R14,BLDLDENM             Point to the BLDL D.E           00013190
         LOAD  DE=(R14),                                               +00013200
               DCB=(R5),                                               +00013210
               ADDR=(R4),                                              +00013220
               SF=(E,LOADWK)                                            00013230
         LR    R15,R2                                                   00013240
         PR                                                             00013250
         DROP                                                           00013260
                                                                        00013270
*        *************************************************************  00013280
*        Routine to build and start an M4RSS stack                      00013290
*        On exit, R15 addresses module working storage                  00013300
*        *************************************************************  00013310
*                                                                       00013320
RSSBUILD EQU   *                                                        00013330
*                                                                       00013340
         USING (STATIC,STATIC_END),R11                                  00013350
         USING WORKAREA,R13                                             00013360
         LR    R5,R1                   Save A(1st RSSB)                 00013370
*                                                                       00013380
         M4RSSR BUILDER,               Create initial M4RSSB           +00013390
               RSSB=(R5),              .. in just-gotten storage       +00013400
               RSSL=Y(RSSBL),          .. which is so long             +00013410
               RSVB=YES,               Build an RVSB as well           +00013420
               VERSION=2,              Get the latest & greatest       +00013430
               CHKR=A(0),              A(RSS Check routine)            +00013440
               GETR=A(0),              A(Storage get routine)          +00013450
               FREER=A(0),             A(Storage free routine)         +00013460
               CUSL=208                .. and their save areas          00013470
*                                                                       00013480
         USING M4RSSB,R5               M4RSSB addressability            00013490
         L     R1,RSSRSVB              Get A(M4RSVB)                    00013500
         USING M4RSVB,R1               .. and addressability            00013510
         MVC   RSVCHRA,=V(M4RSSCHK)    Plug A(RSS Check Routine)        00013520
         MVC   RSVGTRA,=A(RSSGET)      Plug A(RSSB Get Routine)         00013530
         MVC   RSVFRRA,=A(RSSFREE)     Plug A(RSSB Free Routine)        00013540
         DROP  R5,R1                   Lose addressability              00013550
*                                                                       00013560
         LR    R4,R13                  Save caller's R13                00013570
         M4RSSR START,                 Start M4RSS process             +00013580
               RSSB=(R5),              .. with new M4RSSB              +00013590
               PRSA=(R4),              Chain to caller's S/Area        +00013600
               ID=LMMT,                IDENTIFY OURSELVES              +00013610
               VERSION=2,              Get the latest & greatest       +00013620
               WORK=WORKLEN            LENGTH OF OUR W/STORAGE          00013630
         ST    R5,RSSB1A               Save A(1st RSSB)                 00013640
         LR    R15,R13                                                  00013650
*                                                                       00013660
         PR                             Return to caller                00013670
         DROP                                                           00013680
                                                                        00013690
*                                                                       00013700
*  Get an RSSB                                                          00013710
*                                                                       00013720
RSSGET  EQU   *                                                         00013730
         M4RSSR SAVE                    Save callers registers          00013740
*                                                                       00013750
         LARL  R11,STATIC                                               00013760
         USING (STATIC,STATIC_END),R11                                  00013770
         LR    R2,R0                    Get length required             00013780
         AHI   R2,4095                  .. rounded                      00013790
         SRL   R2,12                    .. to 4K                        00013800
         SLL   R2,12                    .. multiple                     00013810
         STORAGE OBTAIN,                Get storage                    +00013820
               LENGTH=(R2),             ...for the RSSB                +00013830
               LOC=ANY                                                  00013840
*                                                                       00013850
         LR    R0,R2                    Get length acquired             00013860
         M4RSSR RESTORE,                Restore caller's registers     +00013870
               KEEP=(R15,R1)            .. except what he needs         00013880
         BR    R14                      Return to caller                00013890
         DROP                                                           00013900
*                                                                       00013910
*  Free an RSSB                                                         00013920
*                                                                       00013930
RSSFREE  EQU   *                                                        00013940
         M4RSSR SAVE                    Save callers registers          00013950
         LARL  R11,STATIC                                               00013960
         USING (STATIC,STATIC_END),R11                                  00013970
*                                                                       00013980
         STORAGE RELEASE,               Free storage                   +00013990
               LENGTH=(0),              .. for this RSSB               +00014000
               ADDR=(1)                 .. from here                    00014010
*                                                                       00014020
         M4RSSR RESTORE,                Restore caller's registers     +00014030
               KEEP=(R15,R1)            .. except what he needs         00014040
         BR    R14                      Return to caller                00014050
         DROP                                                           00014060
*                                                                       00014070
*  Set debug  for the C license routine                                 00014080
*                                                                       00014090
SET_DEBUG    DS  0H                                                     00014100
         M4RSSR SAVE,ID=MTDY                                            00014110
         USING WORKAREA,R8,R7                                           00014120
         using twtoarea,twtowork                                        00014130
         USING LMAB,ANCHOR              Map anchor block                00014140
         USING (STATIC,STATIC_END),R11                                  00014150
         LR    R2,R13                   remember RSS R13                00014160
         ST    R2,LMAB_RSSSAVE
         L     R13,LE_STACK             switch to LE stack              00014170
         USING CEEDSA,R13                                               00014180
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00014190
         JE    SET_DEBUG_ON                                             00014200
* SetDebugOff alias c'SetDebugOff'                                      00014210
         CALL  DebugOf                                                  00014220
         J     SET_DEBUG_EXIT                                           00014230
SET_DEBUG_ON DS 0H                                                      00014240
* SetDebugOn alias c'SetDebugOn'                                        00014250
         CALL  DebugOn                                                  00014260
SET_DEBUG_EXIT DS 0H                                                    00014270
         LR    R13,R2                   switch back to RSS R13          00014280
         M4RSSR RESTORE                 Restore caller's registers      00014290
         BR    R14                                                      00014300
         DROP                                                           00014310
*                                                                       00014320
*  Attach the IP listener                                               00014330
*                                                                       00014340
*                                                                       00014560
*  Read the license file into storage                                   00014570
*                                                                       00014580
LICENSE_READER  DS  0H                                                  00014590
         M4RSSR SAVE,ID=MTLR                                            00014600
         USING WORKAREA,R8,R7                                           00014610
         using twtoarea,twtowork                                        00014620
         USING RETPARMS,RETRYP                                          00014630
         USING LMAB,ANCHOR              Map anchor block                00014640
         USING (STATIC,STATIC_END),R11                                  00014650
         LR    R2,R13                   Remember RSS save               00014660
         ST    R2,LMAB_RSSSAVE
         L     R13,LE_STACK             switch to LE stack              00014670
         USING CEEDSA,R13                                               00014680
         XC    DRDAYS,DRDAYS                                            00014690
*                                                                       00014700
*  delete old license instance if present                               00014710
*                                                                       00014720
         NC    OLD_LICENSE(52),OLD_LICENSE                              00014730
         JZ    LICENSE_READER_02                                        00014740
         STM   R0,R15,RETREGS                                           00014750
         MVC   RETADDR,=A(LICENSE_READER_02)                            00014760
         L     R15,=V(DELETELI)        alias c'DeleteLicenseInstance'   00014770
         CALL  (15),(OLD_LICENSE),MF=(E,PLIST)                          00014780
         MVC   RETREGS(72),RETREGS2                                     00014790
         MVC   RETADDR,=A(SHUTDOWN)                                     00014800
         XC    OLD_LICENSE(52),OLD_LICENSE                              00014810
*                                                                       00014820
*  create a new license instance                                        00014830
*                                                                       00014840
LICENSE_READER_02 DS 0H                                                 00014850
         TWTO  C'&M4SECT:OLD=',(XL52,LICENSE),GEN=NO,                  x00014860
               W=(twtoarea,twtoarea,512)                                00014870
         STM   R0,R15,RETREGS                                           00014880
         MVC   RETADDR,=A(LICENSE_READER_04)                            00014890
* CreateLicenseInstance alias c'CreateLicenseInstance'                  00014900
         CALL  CreateLi,(ErrorMsg,DDLICENSE,certbuff),                 +00014910
               MF=(E,PLIST)                                             00014920
         MVC   RETREGS(72),RETREGS2                                     00014930
         MVC   RETADDR,=A(SHUTDOWN)                                     00014940
         LTR   R4,R15                   remember new license instance   00014950
         JNZ   LICENSE_READER_06        create license instance OK      00014960
*                                                                       00014970
*  create failed issue message and exit rc=8                            00014980
*                                                                       00014990
LICENSE_READER_04 DS 0H                                                 00015000
         MVC   RETREGS(72),RETREGS2                                     00015010
         MVC   RETADDR,=A(SHUTDOWN)                                     00015020
         LR    R13,R2                   switch back to RSS R13          00015030
         LA    R0,5                                                     00015040
         BRAS  R14,MSGLIVE                                              00015050
         LA    R2,8                     set rc 8                        00015060
         J     LICENSE_READER_20                                        00015070
*                                                                       00015080
*  check 'can run on machine'                                           00015090
*                                                                       00015100
LICENSE_READER_06 DS 0H                                                 00015110
*         STM   R0,R15,RETREGS                                          00015120
*         MVC   RETADDR,=A(LICENSE_READER_08)                           00015130
* CanRunOnMachine  alias c'CanRunOnMachine'                             00015140
*         CALL  CanRunOnMachine,(ErrorMsg,ErrorMsg,(R4),days),        x 00015150
*               MF=(E,PLIST)                                            00015160
*         MVC   RETREGS(72),RETREGS2                                    00015170
*         MVC   RETADDR,=A(SHUTDOWN)                                    00015180
*         LTR   R15,R15                                                 00015190
*         JZ    LICENSE_READER_08        NoCanRunOnMachine              00015200
         MVC   DAYS,=F'999'                                             00015210
         STCKE DWORD                                                    00015220
         L     R14,LMAB_M4LMSS0A@                                       00015230
         USING SS0A,R14                                                 00015240
         L     R1,SS0A_DR@                                              00015250
         LPR   R1,R1                                                    00015260
         SLL   R1,2                                                     00015270
         AR    R14,R1                                                   00015280
         DROP  R14                                                      00015290
         USING LMDR,R14                                                 00015300
         CLC   LMDR_STCK,=D'0'          DR set?                         00015310
         JE    LICENSE_READER_10          no                            00015320
         LG    R1,DWORD                                                 00015330
         SG    R1,LMDR_STCK                                             00015340
         DSG   R0,ONEDAY                gives days elapsed              00015350
         L     R0,LMDR_DRDAYS                                           00015360
         DROP  R14                                                      00015370
         SR    R0,R1                                                    00015380
         ST    R0,DRDAYS                                                00015390
         JP    LICENSE_READER_10        CanRunOnMachine                 00015400
         LR    R13,R2                   switch back to RSS R13          00015410
         LA    R0,25                                                    00015420
         BRAS  R14,MSGLIVE                                              00015430
         CLI   LMAB_QUIET,C'Y'          quiet refresh?                  00015440
         JE    LICENSE_READER_08                                        00015450
         POST  LMAB_STOP_ECB                                            00015460
*                                                                       00015470
*  failed 'can run on machine, so delete the new license instance       00015480
*  issue a message and exit rc=8                                        00015490
*                                                                       00015500
LICENSE_READER_08 DS 0H                                                 00015510
         L     R13,LE_STACK             switch to LE stack              00015520
         TWTO  C'&M4SECT:BAD=',(XL52,LMAB_LICENSE),GEN=NO,             x00015530
               W=(twtoarea,twtoarea,512)                                00015540
         STM   R0,R15,RETREGS                                           00015550
         MVC   RETADDR,=A(LICENSE_READER_20)                            00015560
         L     R15,=V(DeleteLi)                                         00015570
         CALL  (15),((R4)),MF=(E,PLIST)                                 00015580
         MVC   RETREGS(72),RETREGS2                                     00015590
         MVC   RETADDR,=A(SHUTDOWN)                                     00015600
         TWTO  C'&M4SECT:RESET=',(XL52,LMAB_LICENSE),GEN=NO,           x00015610
               W=(twtoarea,twtoarea,512)                                00015620
         LR    R13,R2                   switch back to RSS R13          00015630
         LA    R0,5                                                     00015640
         BRAS  R14,MSGLIVE                                              00015650
         LA    R2,8                     set rc 8                        00015660
         J     LICENSE_READER_20                                        00015670
*                                                                       00015680
*  the new license instance is OK, but retain the old license instance  00015690
*  in case it is still in use; it will be deleted at the next refresh   00015700
*                                                                       00015710
LICENSE_READER_10 DS 0H                                                 00015720
         MVC   OLD_LICENSE(52),LMAB_LICENSE  copy old license structure 00015730
         MVC   LMAB_LICENSE(52),0(R4)  set new license structure        00015740
         LA    R0,LMAB_LICENSE                                          00015750
         ST    R0,LMAB_LICENSE@         set license structure pointer   00015760
         LM    R14,R15,LMAB_LICENSE                                     00015770
         XR    R1,R1                                                    00015780
CKSM     CKSM  R1,R14                                                   00015790
         BRC   1,CKSM                                                   00015800
         ST    R1,CHECKSUM                                              00015810
         TWTO  C'&M4SECT:NEW=',(XL52,LMAB_LICENSE),GEN=NO,             x00015820
               W=(twtoarea,twtoarea,512)                                00015830
         LR    R13,R2                   switch back to RSS R13          00015840
         CLI   LMAB_QUIET,C'Y'          quiet refresh?                  00015850
         JE    LICENSE_READER_18          yes                           00015860
         NC    DRDAYS,DRDAYS                                            00015870
         JZ    LICENSE_READER_16                                        00015880
         CLC   DRDAYS,DAYS                                              00015890
         JH    LICENSE_READER_16                                        00015900
         MVC   DAYS,DRDAYS                                              00015910
LICENSE_READER_16 DS 0H                                                 00015920
         clc   days,=f'&days'                                           00015930
         JH    LICENSE_READER_18                                        00015940
         mvc   @num1,days                                               00015950
         LA    R0,15                                                    00015960
         BRAS  R14,MSGLIVE                                              00015970
LICENSE_READER_18 DS 0H                                                 00015980
         XR    R2,R2                    set rc zero                     00015990
LICENSE_READER_20 DS 0H                                                 00016000
         MVC   RETREGS(72),RETREGS2                                     00016010
         MVC   RETADDR,=A(SHUTDOWN)                                     00016020
         DROP  R13                                                      00016030
         LTR   R15,R2                                                   00016040
         M4RSSR RESTORE,                Restore caller's registers     +00016050
               KEEP=(R15,R1)            .. except what he needs         00016060
         BR    R14                                                      00016070
         DROP                                                           00016080
                                                                        00016090
*                                                                       00016100
*  Process any STOP request                                             00016110
*                                                                       00016120
STOP     DS    0H                                                       00016130
         M4RSSR SAVE,ID=MTSP                                            00016140
         USING WORKAREA,R8,R7                                           00016150
         USING LMAB,ANCHOR             Map anchor block                 00016160
         USING COM,R9                  Make addressable                 00016170
         LA    R15,8                                                    00016180
         TM    LMAB_STOP_ECB,X'40'                                      00016190
         BO    STOPPING                                                 00016200
         L     R1,COMECBPT             Point to COM ecb                 00016210
         TM    0(R1),X'40'                                              00016220
         BNO   STOPX                                                    00016230
         NI    0(R1),255-X'40'                                          00016240
         L     R10,COMCIBPT            Get CIB pointer                  00016250
         USING CIB,R10                                                  00016260
         CLI   CIBVERB,CIBSTOP          STOP requested?                 00016270
         JNE   STOPX                      no                            00016280
STOPPING DS    0H                                                       00016290
         XR    R15,R15                                                  00016300
STOPX    DS    0H                                                       00016310
         M4RSSR RESTORE,                Restore caller's registers     +00016320
               KEEP=(R15,R1)            .. except what he needs         00016330
         LTR   R15,R15                                                  00016340
         BR    R14                      Return to caller                00016350
         DROP                                                           00016360
*                                                                       00016370
*  Set routine addresses in anchor block                                00016380
*                                                                       00016390
SETPROGS DS    0H                                                       00016400
         M4RSSR SAVE,ID=MTSP                                            00016410
         USING (STATIC,STATIC_END),R11                                  00016420
         USING WORKAREA,R8,R7                                           00016430
         USING LMAB,ANCHOR             Map anchor block                 00016440
         MVC   LMAB_LMRC@,=A(RECOVERY) Recovery routine address         00016450
         WXTRN M4LMPC1,M4LMPC2,M4LMPC3,M4LMPC4,M4LMPC5,M4LMPC6,M4LMPC7  00016460
         MVC   LMAB_LMPC1@,=A(M4LMPC1) PC 1 routine address             00016470
         MVC   LMAB_LMPC2@,=A(M4LMPC2) PC 2 routine address             00016480
         MVC   LMAB_LMPC3@,=A(M4LMPC3) PC 3 routine address             00016490
         MVC   LMAB_LMPC4@,=A(M4LMPC4) PC 4 routine address             00016500
         MVC   LMAB_LMPC5@,=A(M4LMPC5) PC 5 routine address             00016510
         MVC   LMAB_LMPC6@,=A(M4LMPC6) PC 6 routine address             00016520
         MVC   LMAB_LMPC7@,=A(M4LMPC7) PC 7 routine address             00016530
         MVC   LMAB_LMMT_TCB@,PSATOLD-PSA                               00016540
         MVC   LMAB_M4RSSFRS@,=V(M4RSSFRS)                              00016550
         MVC   LMAB_M4RSSCHK@,=V(M4RSSCHK)                              00016560
         MVC   LMAB_RSSG@,=A(RSSGET)                                    00016570
         MVC   LMAB_RSSF@,=A(RSSFREE)                                   00016580
         MVC   LMAB_M4CONSL@,=V(M4CONSL)                                00016590
         MVC   LMAB_M4MSGFM@,=V(M4MSGFM)                                00016600
         MVC   LMAB_MSGTABL@,=V(M4LMMSGL)                               00016610
         MVC   LMAB_MSGTABD@,=V(M4LMMSGD)                               00016620
         L     R15,FLCCVT-PSA(,R0)      Address of CVT                  00016630
         L     R15,CVTCSRT-CVT(,R15)    Address of CSR table            00016640
         L     R15,X'14'(,R15)          CSRCPEB of CSRCPQRY             00016650
         MVC   LMAB_IEANTCR@,X'4'(R15)                                  00016660
         MVC   LMAB_IEANTRT@,X'8'(R15)                                  00016670
         MVC   LMAB_IEANTDL@,X'C'(R15)                                  00016680
         M4RSSR RESTORE,                Restore caller's registers     +00016690
               KEEP=(R15,R1)            .. except what he needs         00016700
         BR    R14                      Return to caller                00016710
         DROP                                                           00016720
*                                                                       00016730
*  Operator command processor                                           00016740
*                                                                       00016750
OPERCMD  DS    0H                                                       00016760
         M4RSSR SAVE,ID=MTOP                                            00016770
         USING (STATIC,STATIC_END),R11                                  00016780
         USING WORKAREA,R8,R7                                           00016790
         USING LMAB,ANCHOR              Map anchor block                00016800
         USING COM,R9                                                   00016810
         L     R10,COMCIBPT             Get CIB pointer                 00016820
         USING CIB,R10                                                  00016830
         CLI   CIBVERB,CIBSTOP          STOP requested?                 00016840
         JE    OPER_STOP                  yes, ignore CIB               00016850
         MVC   DWORD(16),=CL16' '                                       00016860
         LH    R2,CIBDATLN              Get length of input data        00016870
         CH    R2,=H'16'                Too much?                       00016880
         JNH   *+8                        no                            00016890
         LH    R2,=H'16'                 yes. Use 8                     00016900
         BCTR  R2,0                     Make machine length             00016910
         EX    R2,OC                                                    00016920
         QEDIT ORIGIN=COMCIBPT,BLOCK=(R10) Delete CIB                   00016930
         LA    R0,7                                                     00016940
         CLC   =CL8'REFRESH',DWORD                                      00016950
         JE    OPER_REFRESH                                             00016960
         CLC   =CL7'STATUS',DWORD                                       00016970
         JE    OPER_STATUS                                              00016980
         CLC   =CL7'STOP',DWORD                                         00016990
         JE    OPER_STOP                                                00017000
         CLC   =CL6'TRACE',DWORD                                        00017010
         JE    OPER_TRACE                                               00017020
         CLC   =CL6'DEBUG',DWORD                                        00017030
         JNE   OPERMSG                                                  00017040
         MVC   @MOD2,=CL8' '                                            00017050
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00017060
         JNE   OPER_DEBUG_ON                                            00017070
         MVI   LMAB_DEBUG,LMAB_DEBUG_NO                                 00017080
         BRAS  R14,SET_DEBUG                                            00017090
         MVC   @MOD2(3),=C'off'                                         00017100
         LA    R0,10                                                    00017110
         J     OPERMSG                                                  00017120
OPER_DEBUG_ON  DS  0H                                                   00017130
         MVI   LMAB_DEBUG,LMAB_DEBUG_YES                                00017140
         BRAS  R14,SET_DEBUG                                            00017150
         MVC   @MOD2(3),=C'on '                                         00017160
         LA    R0,10                                                    00017170
         J     OPERMSG                                                  00017180
OPER_TRACE     DS  0H                                                   00017190
         MVC   @MOD2,=CL8' '                                            00017200
         CLI   LMAB_TRACE,LMAB_TRACE_YES                                00017210
         JNE   OPER_TRACE_ON                                            00017220
         MVI   LMAB_TRACE,LMAB_TRACE_NO                                 00017230
         MVC   @MOD2(3),=C'off'                                         00017240
         LA    R0,35                                                    00017250
         J     OPERMSG                                                  00017260
OPER_TRACE_ON  DS  0H                                                   00017270
         MVI   LMAB_TRACE,LMAB_TRACE_YES                                00017280
         MVC   @MOD2(3),=C'on '                                         00017290
         LA    R0,35                                                    00017300
         J     OPERMSG                                                  00017310
OPER_REFRESH  DS    0H                 refresh in-storage license       00017320
         BRAS  R14,LICENSE_READER                                       00017390
         JNZ   OPERRC0                                                  00017400
         LA    R0,8                                                     00017410
         BRAS  R14,MSGLIVE                                              00017420
         J     OPERRC0                                                  00017430
OPER_STATUS   DS    0H                 show processor status            00017440
         POST  LMAB_LMDT_STECB         Post status ECB                  00017450
         J     OPERRC0                                                  00017460
OPER_STOP     DS    0H                 shutdown post                    00017470
         POST  LMAB_STOP_ECB           post stop ECB                    00017480
         J     OPERRC0                                                  00017490
OPERMSG  DS    0H                                                       00017500
         BRAS  R14,MSGLIVE                                              00017510
OPERRC0  DS    0H                                                       00017520
         XR    R15,R15                                                  00017530
OPERXIT  DS    0H                                                       00017540
         M4RSSR RESTORE,                Restore caller's registers     +00017550
               KEEP=(R15,R1)            .. except what he needs         00017560
         BR    R14                     Return to caller                 00017570
         DROP                                                           00017580
*                                                                       00017590
*  Command via SSI                                                      00017600
*                                                                       00017610
SSICMD   DS    0H                                                       00017620
         M4RSSR SAVE,ID=SSIC                                            00017630
         USING (STATIC,STATIC_END),R11                                  00017640
         USING WORKAREA,R8,R7                                           00017650
         using twtoarea,twtowork                                        00017660
         USING LMAB,ANCHOR              Map anchor block                00017670
SSICMD02 DS    0H                                                       00017680
         M4CHNR REMFIFO,MF=(E,PLIST),                                  x00017690
               DISP=CMDQCHN-CMDBUFH,ANCHOR=(S,LMAB_CMDQ_ANCH),         x00017700
               REMOVED=(R6)                                             00017710
         LTR   R6,R6                                                    00017720
         JZ    WAIT                                                     00017730
         USING CMDBUFH,R6                                               00017740
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00017750
         JNE   SSICMD04                                                 00017760
         TWTO  C'&M4SECT SSI REMFIFO',W=(twtoarea,twtoarea,512)         00017770
SSICMD04 DS    0H                                                       00017780
         LH    R5,CMDTXTL               Get length of input data        00017790
         LA    R5,CMDBUF(R5)                                            00017800
         LH    R2,CPF                                                   00017810
         M4SRST CPF+2,(R2),CMDTXT,(r5)                                  00017820
         AR    R15,R2                   skip command prefix             00017830
SSICMD12 DS    0H                                                       00017840
         SR    R5,R15                   gives new length                00017850
         MVC   DWORD(16),=CL16' '                                       00017860
         CH    R5,=H'16'                Too much?                       00017870
         JNH   *+8                        no                            00017880
         LH    R5,=H'16'                 yes. Use 16                    00017890
         BCTR  R5,0                     Make machine length             00017900
         EX    R5,OCSSI                                                 00017910
         LH    R5,CMDTXTL                                               00017920
         AHI   R5,CMDBUFHL                                              00017930
         STORAGE RELEASE,ADDR=(R6),LENGTH=(R5),SP=74                    00017940
         LA    R0,7                                                     00017950
         CLC   =CL8'REFRESH',DWORD                                      00017960
         JE    SSIC_REFRESH                                             00017970
         CLC   =CL7'STATUS',DWORD                                       00017980
         JE    SSIC_STATUS                                              00017990
         CLC   =CL7'STOP',DWORD                                         00018000
         JE    SSIC_STOP                                                00018010
         CLC   =CL6'TRACE',DWORD                                        00018020
         JE    SSIC_TRACE                                               00018030
         CLC   =CL6'DEBUG',DWORD                                        00018040
         JNE   SSICMSG                                                  00018050
         MVC   @MOD2,=CL8' '                                            00018060
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00018070
         JNE   SSIC_DEBUG_ON                                            00018080
         MVI   LMAB_DEBUG,LMAB_DEBUG_NO                                 00018090
         BRAS  R14,SET_DEBUG                                            00018100
         MVC   @MOD2(3),=C'off'                                         00018110
         LA    R0,10                                                    00018120
         J     SSICMSG                                                  00018130
SSIC_DEBUG_ON  DS  0H                                                   00018140
         MVI   LMAB_DEBUG,LMAB_DEBUG_YES                                00018150
         BRAS  R14,SET_DEBUG                                            00018160
         MVC   @MOD2(3),=C'on '                                         00018170
         LA    R0,10                                                    00018180
         J     SSICMSG                                                  00018190
SSIC_TRACE    DS    0H                                                  00018200
         MVC   @MOD2,=CL8' '                                            00018210
         CLI   LMAB_TRACE,LMAB_TRACE_YES                                00018220
         JNE   SSIC_TRACE_ON                                            00018230
         MVI   LMAB_DEBUG,LMAB_TRACE_NO                                 00018240
         MVC   @MOD2(3),=C'off'                                         00018250
         LA    R0,35                                                    00018260
         J     SSICMSG                                                  00018270
SSIC_TRACE_ON  DS  0H                                                   00018280
         MVI   LMAB_TRACE,LMAB_TRACE_YES                                00018290
         MVC   @MOD2(3),=C'on '                                         00018300
         LA    R0,35                                                    00018310
         J     SSICMSG                                                  00018320
SSIC_REFRESH  DS    0H                 refresh in-storage license       00018330
         BRAS  R14,LICENSE_READER                                       00018340
         JNZ   SSICRC0                                                  00018350
         LA    R0,8                                                     00018360
         BRAS  R14,MSGLIVE                                              00018370
         J     SSICRC0                                                  00018380
SSIC_STATUS   DS    0H                 show processor status            00018390
         POST  LMAB_LMDT_STECB         Post status ECB                  00018400
         J     SSICRC0                                                  00018410
SSIC_STOP     DS    0H                 shutdown post                    00018420
         POST  LMAB_STOP_ECB           post stop ECB                    00018430
         J     SSICRC0                                                  00018440
SSICMSG  DS    0H                                                       00018450
         BRAS  R14,MSGLIVE                                              00018460
SSICRC0  DS    0H                                                       00018470
         XR    R15,R15                                                  00018480
SSICXIT  DS    0H                                                       00018490
         M4RSSR RESTORE,                Restore caller's registers     +00018500
               KEEP=(R15,R1)            .. except what he needs         00018510
         BR    R14                     Return to caller                 00018520
         DROP                                                           00018530
*                                                                       00018540
*  write hourly counts                                                  00018550
*                                                                       00018560
Hourly_counts  DS  0H                                                   00018570
         M4RSSR SAVE,ID=HRLY                                            00018580
         USING WORKAREA,R8,R7                                           00018590
         using twtoarea,twtowork                                        00018600
         USING RETPARMS,RETRYP                                          00018610
         USING LMAB,ANCHOR              Map anchor block                00018620
         USING (STATIC,STATIC_END),R11                                  00018630
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00018640
         DOCC  EQUAL                                                    00018650
         wto   'hourly counts'                                          00018660
         DOCC  END                                                      00018670
         MODESET KEY=ZERO,MODE=SUP                                      00018680
         LG    R4,LMAB_SHARED                                           00018690
         SAM64                                                          00018700
         using lmbar_prefix,r4                                          00018710
         MVC   SMFRSTCK,lmbar_prefix_hourly                             00018720
         AGHI   R4,lmbar_prefixl                                        00018730
         drop  R4                                                       00018740
         using lmbar,r4                                                 00018750
         CLC   lmbar_next,=F'0'                                         00018760
         JE    Hourly50                                                 00018770
Hourly28 ds    0h                                                       00018780
         LMG   R0,R1,lmbar_current#                                     00018790
         LGR   R2,R0                                                    00018800
         LGR   R3,R1                                                    00018810
         LHI   R0,0                    hourly to zero                   00018820
         CDSG  R2,R0,lmbar_current#    set counts                       00018830
         JNZ   Hourly28                                                 00018840
         STMG  R2,R3,HourlyCounts                                       00018850
         la    r15,SMFRPROD            mvst target                      00018860
         lgr   r1,r15                                                   00018870
         la    r14,lmbar_string                                         00018880
         xr    r0,r0                                                    00018890
         mvst  r15,r14                 copy product string              00018900
         sgr   r15,r1                  gives machine length-1           00018910
         ahi   r15,1                                                    00018920
         sth   r15,smfrdlen            remember for SMF                 00018930
         lgr   r14,r1                  point to product string          00018940
         LARL  R1,DECODE_TAB                                            00018950
         XR    R0,R0                                                    00018960
Hourly32  TRE   R14,R1                 decode product string            00018970
         BC    1,Hourly32              cc=3                             00018980
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00018990
         DOCC  EQUAL                                                    00019000
         TWTO  C'&M4SECT Current ',(F,HourlyCounts),C' hourly ',       +00019010
               (F,HourlyCounts+4),C' daily ',                          +00019020
               (F,HourlyCounts+12),C' ',                               +00019030
               (CL32,SMFRPROD),                                        +00019040
               GEN=YES,                                                x00019050
               W=(twtoarea,twtoarea,512)                                00019060
         DOCC  END                                                      00019070
         TM    LMAB_SMFOPT,LMAB_SMFOPT_USAGE                            00019080
         JNO   HOURLY40                                                 00019090
         CLI   LMAB_SMF#,X'00'                                          00019100
         JE    Hourly40                                                 00019110
         MODESET KEY=NZERO,MODE=PROB                                    00019120
         SAM31                                                          00019130
         MVC   SMFRTYPE,LMAB_SMF#     Set SMF record number             00019140
         MVC   SMFRCURR(16),HourlyCounts                                00019150
         LH    R15,SMFRDLEN           product name length               00019160
         LR    R0,R15                                                   00019170
         AHI   R0,2                                                     00019180
         STH   R0,SMFRDLEN                                              00019190
         AHI   R15,SMFRCDL            plus SMF record length            00019200
         STH   R15,SMFRLEN                                              00019210
         MVI   SMFRFLAG,X'40'         sub types valid                   00019220
         MVC   SMFRSTYP,=H'1'                                           00019230
         L     R15,16                 ->CVT                             00019240
         USING CVT,R15                                                  00019250
         L     R15,CVTSMCA            ->SMCA                            00019260
         DROP  R15                                                      00019270
         USING SMCABASE,R15                                             00019280
         MVC   SMFRSID,SMCASID                                          00019290
         DROP  R15                                                      00019300
                                                                        00019310
         TIME  BIN,DWORD,LINKAGE=SYSTEM,MF=(E,TIME)                     00019320
         MVC   SMFRTIME,DWORD                                           00019330
         MVO   SMFRDATE,DWORD+8(4)    move allowing for sign            00019340
         OI    SMFRDATE+3,X'0F'       set sign                          00019350
         MVI   SMFRDATE,X'01'         set century                       00019360
         XC    SMFRSEG,SMFRSEG                                          00019370
                                                                        00019380
         MODESET KEY=ZERO,MODE=SUP                                      00019390
         LA    R2,SMFRCD                                                00019400
         SMFEWTM ((R2)),BRANCH=YES                                      00019410
         LR    R2,R15                                                   00019420
         MODESET KEY=NZERO,MODE=PROB                                    00019430
         LTR   R2,R2                                                    00019440
         JZ    Hourly36                                                 00019450
         ST    R2,@num1                                                 00019460
         LA    R0,30                                                    00019470
         BRAS  R14,MSGLIVE                                              00019480
Hourly36 DS    0H                                                       00019490
         MODESET KEY=ZERO,MODE=SUP                                      00019500
         SAM64                                                          00019510
Hourly40 DS    0H                                                       00019520
         L     R4,lmbar_next           point to next product entry      00019530
         CLC   lmbar_next,=F'0'                                         00019540
         JNE   Hourly28                                                 00019550
Hourly50 DS    0H                                                       00019560
         SAM31                                                          00019570
         MODESET KEY=NZERO,MODE=PROB                                    00019580
         M4RSSR RESTORE,                Restore caller's registers     +00019590
               KEEP=(R15,R1)            .. except what he needs         00019600
         BR    R14                     Return to caller                 00019610
         DROP                                                           00019620
*                                                                       00019630
*  write daily counts                                                   00019640
*                                                                       00019650
daily_counts  DS  0H                                                    00019660
         M4RSSR SAVE,ID=DTLY                                            00019670
         USING WORKAREA,R8,R7                                           00019680
         using twtoarea,twtowork                                        00019690
         USING RETPARMS,RETRYP                                          00019700
         USING LMAB,ANCHOR              Map anchor block                00019710
         USING (STATIC,STATIC_END),R11                                  00019720
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00019730
         DOCC  EQUAL                                                    00019740
         wto   'daily counts'                                           00019750
         DOCC  END                                                      00019760
         MODESET KEY=ZERO,MODE=SUP                                      00019770
         LG    R4,LMAB_SHARED                                           00019780
         SAM64                                                          00019790
         using lmbar_prefix,r4                                          00019800
         MVC   SMFRSTCK,lmbar_prefix_daily                              00019810
         AGHI   R4,lmbar_prefixl                                        00019820
         drop  R4                                                       00019830
         using lmbar,r4                                                 00019840
         CLC   lmbar_next,=F'0'                                         00019850
         JE    daily50                                                  00019860
daily28 ds    0h                                                        00019870
         LMG   R0,R1,lmbar_current#                                     00019880
         LGR   R2,R0                                                    00019890
         LGR   R3,R1                                                    00019900
         LGHI  R1,0                    daily to zero                    00019910
         LHI   R0,0                    hourly to zero                   00019920
         CDSG  R2,R0,lmbar_current#    set counts                       00019930
         JNZ   daily28                                                  00019940
         STMG  R2,R3,dailyCounts                                        00019950
         la    r15,SMFRPROD            mvst target                      00019960
         lgr   r1,r15                                                   00019970
         la    r14,lmbar_string                                         00019980
         xr    r0,r0                                                    00019990
         mvst  r15,r14                 copy product string              00020000
         sgr   r15,r1                  gives length -1                  00020010
         ahi   r15,1                                                    00020020
         sth   r15,smfrdlen            remember for SMF                 00020030
         lgr   r14,r1                  point to product string          00020040
         LARL  R1,DECODE_TAB                                            00020050
         XR    R0,R0                                                    00020060
daily32  TRE   R14,R1                 decode product string             00020070
         BC    1,daily32              cc=3                              00020080
         CLI   LMAB_DEBUG,LMAB_DEBUG_YES                                00020090
         DOCC  EQUAL                                                    00020100
         TWTO  C'&M4SECT Current ',(F,dailyCounts),C' hourly ',        +00020110
               (F,dailyCounts+4),C' daily ',                           +00020120
               (F,dailyCounts+12),C' ',                                +00020130
               (CL32,SMFRPROD),                                        +00020140
               GEN=YES,                                                x00020150
               W=(twtoarea,twtoarea,512)                                00020160
         DOCC  END                                                      00020170
         TM    LMAB_SMFOPT,LMAB_SMFOPT_USAGE                            00020180
         JNO   daily40                                                  00020190
         CLI   LMAB_SMF#,X'00'                                          00020200
         JE    daily40                                                  00020210
         MODESET KEY=NZERO,MODE=PROB                                    00020220
         SAM31                                                          00020230
         MVC   SMFRTYPE,LMAB_SMF#     Set SMF record number             00020240
         MVC   SMFRCURR(16),dailyCounts                                 00020250
         LH    R15,SMFRDLEN           product name length               00020260
         LR    R0,R15                                                   00020270
         AHI   R0,2                                                     00020280
         STH   R0,SMFRDLEN                                              00020290
         AHI   R15,SMFRCDL            plus SMF record length            00020300
         STH   R15,SMFRLEN                                              00020310
         MVI   SMFRFLAG,X'40'         sub types valid                   00020320
         MVC   SMFRSTYP,=H'2'                                           00020330
         L     R15,16                 ->CVT                             00020340
         USING CVT,R15                                                  00020350
         L     R15,CVTSMCA            ->SMCA                            00020360
         DROP  R15                                                      00020370
         USING SMCABASE,R15                                             00020380
         MVC   SMFRSID,SMCASID                                          00020390
         DROP  R15                                                      00020400
                                                                        00020410
         TIME  BIN,DWORD,LINKAGE=SYSTEM,MF=(E,TIME)                     00020420
         MVC   SMFRTIME,DWORD                                           00020430
         MVO   SMFRDATE,DWORD+8(4)    move allowing for sign            00020440
         OI    SMFRDATE+3,X'0F'       set sign                          00020450
         MVI   SMFRDATE,X'01'         set century                       00020460
         XC    SMFRSEG,SMFRSEG                                          00020470
                                                                        00020480
         MODESET KEY=ZERO,MODE=SUP                                      00020490
         LA    R2,SMFRCD                                                00020500
         SMFEWTM ((R2)),BRANCH=YES                                      00020510
         LR    R2,R15                                                   00020520
         MODESET KEY=NZERO,MODE=PROB                                    00020530
         LTR   R2,R2                                                    00020540
         JZ    daily36                                                  00020550
         ST    R2,@num1                                                 00020560
         LA    R0,30                                                    00020570
         BRAS  R14,MSGLIVE                                              00020580
daily36 DS    0H                                                        00020590
         MODESET KEY=ZERO,MODE=SUP                                      00020600
         SAM64                                                          00020610
daily40 DS    0H                                                        00020620
         L     R4,lmbar_next           point to next product entry      00020630
         CLC   lmbar_next,=F'0'                                         00020640
         JNE   daily28                                                  00020650
daily50  DS    0H                                                       00020660
         SAM31                                                          00020670
         MODESET KEY=NZERO,MODE=PROB                                    00020680
         M4RSSR RESTORE,                Restore caller's registers     +00020690
               KEEP=(R15,R1)            .. except what he needs         00020700
         BR    R14                     Return to caller                 00020710
         DROP                                                           00020720
*                                                                       00020730
*  Live messages routine                                                00020740
*                                                                       00020750
MSGLIVE  DS    0H                                                       00020760
         M4RSSR SAVE,ID=MTMS                                            00020770
         USING (STATIC,STATIC_END),R11                                  00020780
         USING WORKAREA,R8,R7                                           00020790
         USING LMAB,ANCHOR             Map anchor block                 00020800
         MVC   @JOBN,LMAB_JOBNAME      Set jobname insert               00020810
         MVC   @PID,LMAB_PID           Product ID                       00020820
         MVC   @PLEVEL,LMAB_LEVEL      Set release level insert         00020830
         MVC   @MOD1,=CL8'&M4SECT'                                      00020840
*                                                                       00020850
* All LMMSG operand values to default to those from the LMAB            00020860
*                                                                       00020870
         LA    R2,LMAB_PID                                              00020880
         LMMSG    FUNC=LIVE,           Drive the message routines      +00020890
               PREFIX=(R2)             Message prefix                   00020900
         M4RSSR RESTORE,                Restore caller's registers     +00020910
               KEEP=(R15,R1)            .. except what he needs         00020920
         BR    R14                     Return to caller                 00020930
         DROP                                                           00020940
*                                                                       00020950
*  Process parameters                                                   00020960
*                                                                       00020970
GETPARMS DS    0H                                                       00020980
         M4RSSR SAVE,ID=MTPM                                            00020990
         USING (STATIC,STATIC_END),R11                                  00021000
         USING WORKAREA,R8,R7                                           00021010
         USING LMAB,ANCHOR             Map anchor block                 00021020
         ICM   R4,B'1111',0(R2)        Parameters passed?               00021030
         JZ    PARMS90                   No                             00021040
         XR    R5,R5                                                    00021050
         ICM   R5,B'0011',0(R4)        Parameters passed?               00021060
         JZ    PARMS90                   No                             00021070
         LA    R4,2(,R4)               Point to parms                   00021080
         LA    R5,0(R5,R4)             Point past last byte             00021090
         M4SRST  =C'TOKEN=',6,(r4),(r5),,PARMS04                        00021100
         LA    R6,6(,R15)                                               00021110
         M4SRST  =C',',1,(r6),(r5),PARMS02                              00021120
         LR    R15,R5                                                   00021130
PARMS02  DS    0H                                                       00021140
         SR    R15,R6                                                   00021150
         CHI   R15,16                                                   00021160
         JH    PARMERR                                                  00021170
         BCTR  R15,0                                                    00021180
         MVC   LMAB_NT_NAME,=CL16' '                                    00021190
         EX    R15,MVC_TOKEN                                            00021200
PARMS04  DS    0H                                                       00021210
         M4SRST  =C'ROUTE=',6,(r4),(r5),,PARMS12                        00021220
         LA    R6,6(,R15)                                               00021230
         M4SRST  =C',',1,(r6),(r5),PARMS10                              00021240
         LR    R15,R5                                                   00021250
PARMS10 DS    0H                                                        00021260
         SR    R15,R6                                                   00021270
         CHI   R15,3                                                    00021280
         JH    PARMERR                                                  00021290
         BCTR  R15,0                                                    00021300
         EX    R15,TRT                                                  00021310
         JNZ   PARMERR                                                  00021320
         EX    R15,PACK                                                 00021330
         CVB   R0,DWORD                                                 00021340
         CHI   R0,128                                                   00021350
         JH    PARMERR                                                  00021360
         STH   R0,LMAB_WTO_ROUTE                                        00021370
PARMS12  DS    0H                                                       00021380
         M4SRST  =C'CASE=U',6,(r4),(r5),,PARMS16                        00021390
         LA    R6,6(,R15)                                               00021400
         M4SRST  =C',',1,(r6),(r5),PARMS14                              00021410
         LR    R15,R5                                                   00021420
PARMS14  DS    0H                                                       00021430
         SR    R15,R6                                                   00021440
         CHI   R15,1                                                    00021450
         JH    PARMERR                                                  00021460
         MVI   LMAB_UPPER_CASE,LMAB_UPPER_CASE_Y                        00021470
PARMS16  DS    0H                                                       00021480
         M4SRST  =C'SMF=',4,(r4),(r5),,PARMS20                          00021490
         LA    R6,4(,R15)                                               00021500
         M4SRST  =C',',1,(r6),(r5),PARMS18                              00021510
         LR    R15,R5                                                   00021520
PARMS18 DS    0H                                                        00021530
         SR    R15,R6                                                   00021540
         CHI   R15,3                                                    00021550
         JH    PARMERR                                                  00021560
         BCTR  R15,0                                                    00021570
         EX    R15,TRT                                                  00021580
         JNZ   PARMERR                                                  00021590
         EX    R15,PACK                                                 00021600
         CVB   R0,DWORD                                                 00021610
         CHI   R0,255                                                   00021620
         JH    PARMERR                                                  00021630
         CHI   R0,128                                                   00021640
         JL    PARMERR                                                  00021650
         STC   R0,LMAB_SMF#                                             00021660
PARMS20 DS    0H                                                        00021670
         M4SRST  =C'SMFOPTS=',8,(r4),(r5),,PARMS26                      00021680
         LA    R6,8(,R15)                                               00021690
         M4SRST  =C',',1,(r6),(r5),PARMS22                              00021700
         LR    R15,R5                                                   00021710
PARMS22  DS    0H                                                       00021720
         SR    R15,R6                                                   00021730
         CHI   R15,2                                                    00021740
         JH    PARMERR                                                  00021750
         BCTR  R15,0                                                    00021760
         EX    R15,TRT                                                  00021770
         JNZ   PARMERR                                                  00021780
         EX    R15,PACK                                                 00021790
         CVB   R0,DWORD                                                 00021800
         CHI   R0,15                                                    00021810
         JH    PARMERR                                                  00021820
         STC   R0,LMAB_SMFOPT                                           00021830
PARMS26 DS    0H                                                        00021840
         M4SRST  =C'SSID=',5,(r4),(r5),,PARMS30                         00021850
         LA    R6,5(,R15)                                               00021860
         M4SRST  =C',',1,(r6),(r5),PARMS28                              00021870
         LR    R15,R5                                                   00021880
PARMS28 DS    0H                                                        00021890
         SR    R15,R6                                                   00021900
         CHI   R15,4                                                    00021910
         JNE   PARMERR                                                  00021920
         MVC   LMAB_SSID,0(R6)                                          00021930
PARMS30 DS    0H                                                        00021940
         M4SRST  =C'CPF=',4,(r4),(r5),,PARMS40                          00021950
         LA    R6,4(,R15)                                               00021960
         M4SRST  =C',',1,(r6),(r5),PARMS32                              00021970
         LR    R15,R5                                                   00021980
PARMS32 DS    0H                                                        00021990
         SR    R15,R6                                                   00022000
         JZ    PARMERR                                                  00022010
         CHI   R15,8                                                    00022020
         JH    PARMERR                                                  00022030
         STH   R15,CPF                                                  00022040
         BCTR  R15,0                                                    00022050
         MVC   CPF+2(8),=CL8' '                                         00022060
         EX    R15,MVCCPF                                               00022070
PARMS40 DS    0H                                                        00022080
         M4SRST  =C'DEBUG=',6,(r4),(r5),,PARMS50                        00022090
         LA    R6,6(,R15)                                               00022100
         M4SRST  =C',',1,(r6),(r5),PARMS42                              00022110
         LR    R15,R5                                                   00022120
PARMS42 DS    0H                                                        00022130
         SR    R15,R6                                                   00022140
         JZ    PARMERR                                                  00022150
         CLI   0(R6),C'Y'                                               00022160
         JNE   PARMS50                                                  00022170
         MVI   LMAB_DEBUG,LMAB_DEBUG_YES                                00022180
PARMS50 DS    0H                                                        00022190
         M4SRST  =C'VERBOSE=N',9,(r4),(r5),,PARMS60                     00022200
         LA    R6,9(,R15)                                               00022210
         M4SRST  =C',',1,(r6),(r5),PARMS54                              00022220
         LR    R15,R5                                                   00022230
PARMS54  DS    0H                                                       00022240
         SR    R15,R6                                                   00022250
         CHI   R15,1                                                    00022260
         JH    PARMERR                                                  00022270
         MVI   LMAB_VERBOSE,C'N'                                        00022280
PARMS60 DS    0H                                                        00022290
         M4SRST  =C'TRACE=',6,(r4),(r5),,PARMS90                        00022450
         LA    R6,6(,R15)                                               00022460
         M4SRST  =C',',1,(r6),(r5),PARMS70                              00022470
         LR    R15,R5                                                   00022480
PARMS70 DS    0H                                                        00022490
         SR    R15,R6                                                   00022500
         JZ    PARMERR                                                  00022510
         CLI   0(R6),C'Y'                                               00022520
         JNE   PARMS90                                                  00022530
         MVI   LMAB_TRACE,LMAB_TRACE_YES                                00022540
PARMS90  DS    0H                                                       00022550
         XR    R15,R15                                                  00022560
PARM99   DS    0H                                                       00022570
         M4RSSR RESTORE,                Restore caller's registers     +00022580
               KEEP=(R15,R1)            .. except what he needs         00022590
         BR    R14                      Return to caller                00022600
PARMERR  DS    0H                                                       00022610
         LA    R15,PARMS_ERROR                                          00022620
         J     PARM99                                                   00022630
         DROP                                                           00022640
*        ************************************************************** 00022650
*        * Check we will be able to 'start' the required subsystem    * 00022660
*        *   Call SSI Services with a 'QUERY'                         * 00022670
*        *   If apparently active, check out further                  * 00022680
*        *   If really inactive, deactivate the SSI                   * 00022690
*        *   If really active, issue message to that effect           * 00022700
*        * On exit, R15 eq 0 = OK to proceed                          * 00022710
*        *          R15 ne 0 = 'No go' recommended                    * 00022720
*        *          (OLD_SS0A@ may be set)                            * 00022730
*        ************************************************************** 00022740
                                                                        00022750
         USING (STATIC,STATIC_END),R11                                  00022760
         USING WORKAREA,R8,R7                                           00022770
         using twtoarea,twtowork                                        00022780
         USING LMAB,ANCHOR             Map anchor block                 00022790
QUERY_SUBSYSTEM  EQU  *                                                 00022800
         M4RSSR SAVE,ID=MTQS                                            00022810
         MVI   SSI_MSG,C'N'            * 'no message on non-zero RC'    00022820
         LA    R1,=CL8'QUERY'          * ==> SSISERV function           00022830
         SR    R2,R2                   * (No GET/PUTUSER1 arg)          00022840
         SR    R3,R3                                                    00022850
         BRAS  R14,CALL_SSISERV        * Go invoke SSI Services         00022860
         LARL  R14,QUERYSS_RCROUTE                                      00022870
         B     0(R14,R15)              * Branch on return code          00022880
QUERYSS_RCROUTE  EQU  *                                                 00022890
         J     QUERYSS_SUBSYSACT       * RC = 00 = Subsystem active     00022900
         J     QUERYSS_SUBSYSINACT     * RC = 04 = Subsystem inactive   00022910
         J     QUERYSS_CARRYON         * RC = 08 = Subsystem never up   00022920
         CLC   SSISERV_REASON,=F'8'                                     00022930
         JE    QUERYSS_ACTIVMSG                                         00022940
         MVC   @CHAR32B(8),=C'M4LMSSSR' * @B Name of program            00022950
         MVC   @CHAR32A(8),0(R4)       * @A Function                    00022960
         MVC   @HEX1,SSISERV_RETCODE   * @8 Return code                 00022970
         MVC   @HEX2,SSISERV_REASON    * @9 Reason code                 00022980
         LA    R0,21                   * Message no.                    00022990
         BRAS  R14,MSGLIVE             * Issue message                  00023000
         J     QUERYSS_NOGO            * RC = 12 = Request error        00023010
                                                                        00023020
QUERYSS_SUBSYSACT  EQU  *                                               00023030
         LA    R1,=CL8'GETUSER1'       * ==> SSISERV function           00023040
         LA    R2,OLD_SS0A@            * ==> GETUSER1 return            00023050
         SR    R3,R3                                                    00023060
         BRAS  R14,CALL_SSISERV        * Go invoke SSI services         00023070
                                                                        00023080
* The subsystem appears to be active, ie SSI thinks so, but we          00023090
* will check the SSCTUSE1 value matches the M4LMSS0A address published  00023100
* in the persistant name/token.                                         00023110
                                                                        00023120
         ICM   R3,15,OLD_SS0A@         * Get A(M4LMS0A)                 00023130
         JZ    QUERYSS_ACTIVMSG        * .. & branch if none            00023140
         USING SS0A,R3                                                  00023150
         CLC   SS0A_EYE,=CL8'M4LMSS0A' * Ours?                          00023160
         JNE   QUERYSS_ACTIVMSG        *   no                           00023170
         DROP  R3                                                       00023180
* Inactive to MVS but active to SSI, so deactivate it                   00023190
         BRAS  R14,DEACTIV8_SUBSYSTEM  * Go deactivate the subsystem    00023200
         J     QUERYSS_CARRYON         * Go exit with 'Carry on'        00023210
                                                                        00023220
QUERYSS_ACTIVMSG  EQU  *                                                00023230
         MVI   @CHAR32A,C' '                                            00023240
         MVC   @CHAR32A+1(L'@CHAR32A-1),@CHAR32A                        00023250
         MVC   @CHAR32A(4),LMAB_SSID                                    00023260
         LA    R0,23                   * 'Already active' msgno         00023270
         BRAS  R14,MSGLIVE             * Go issue message               00023280
         J     QUERYSS_NOGO            * Go exit with 'No go'           00023290
                                                                        00023300
QUERYSS_SUBSYSINACT  EQU  *                                             00023310
         LA    R1,=CL8'GETUSER1'       * ==> SSISERV function           00023320
         LA    R2,OLD_SS0A@            * ==> GETUSER1 return            00023330
         SR    R3,R3                                                    00023340
         BRAS  R14,CALL_SSISERV        * Go invoke SSI services         00023350
         J     QUERYSS_CARRYON         * Go exit with 'Carry on'        00023360
                                                                        00023370
QUERYSS_NOGO  EQU  *                                                    00023380
         LHI   R15,4                   * Set 'No go' RC                 00023390
         J     QUERYSS_EXIT            * Go to routine exit             00023400
                                                                        00023410
QUERYSS_CARRYON  EQU  *                                                 00023420
         SR    R15,R15                 * Set 'OK to proceed' RC         00023430
                                                                        00023440
QUERYSS_EXIT  EQU   *                                                   00023450
         M4RSSR RESTORE,                Restore caller's registers     +00023460
               KEEP=(R15,R1)            .. except what he needs         00023470
         BR    R14                     * Return to caller               00023480
         DROP                                                           00023490
*        ************************************************************** 00023500
*        * Ready the Subsystem                                        * 00023510
*        *   Initialize the Subsystem                                 * 00023520
*        *   Anchor SSAB in Subsystem architecture                    * 00023530
*        * No entry conditions                                        * 00023540
*        * On exit, R15 is as set by SSISERV                          * 00023550
*        ************************************************************** 00023560
                                                                        00023570
         USING (STATIC,STATIC_END),R11                                  00023580
         USING WORKAREA,R8,R7                                           00023590
         using twtoarea,twtowork                                        00023600
         USING LMAB,ANCHOR             Map anchor block                 00023610
READY_SUBSYSTEM  EQU  *                                                 00023620
         M4RSSR SAVE,ID=MTRS                                            00023630
         MVI   SSI_MSG,C'Y'            * Set 'Message on non-zero RC'   00023640
         LA    R1,=CL8'INIT'           * ==> SSISERV function           00023650
         SR    R2,R2                   * (No GET/PUTUSER1 arg)          00023660
         SR    R3,R3                   *                                00023670
         BRAS  R14,CALL_SSISERV        * Go invoke SSI Services         00023680
         LTR   R15,R15                 * Branch if                      00023690
         JNZ   READYSS_EXIT            * .. error from INIT             00023700
                                                                        00023710
         LA    R1,=CL8'PUTUSER1'       * ==> SSISERV function           00023720
         LA    R2,LMAB_M4LMSS0A@       * ==> PUTUSER1 value             00023730
         SR    R3,R3                                                    00023740
         BRAS  R14,CALL_SSISERV        * Go invoke SSI Services         00023750
         LTR   R15,R15                 * Branch if                      00023760
         JNZ   READYSS_EXIT            * .. error from INIT             00023770
                                                                        00023780
         LA    R1,=CL8'ADDFUNC'        * ==> SSISERV function           00023790
         LA    R2,=A(10)               * ==> Function number            00023800
         LA    R3,LMAB_M4LMSS0A@       * ==> Function address           00023810
         BAL   R14,CALL_SSISERV        * Go invoke SSI Services         00023820
         LTR   R15,R15                 * Branch if                      00023830
         JNZ   READYSS_EXIT            * .. error from INIT             00023840
                                                                        00023850
         LA    R1,=CL8'ACTIVATE'       * ==> SSISERV function           00023860
         SR    R2,R2                   * (No GET/PUTUSER1 arg)          00023870
         SR    R3,R3                   * Set 'Message on non-zero RC'   00023880
         BAL   R14,CALL_SSISERV        * Go invoke SSI Services         00023890
                                                                        00023900
READYSS_EXIT  EQU   *                                                   00023910
         M4RSSR RESTORE,                Restore caller's registers     +00023920
               KEEP=(R15,R1)            .. except what he needs         00023930
         BR    R14                     * Return to caller               00023940
         DROP                                                           00023950
*        ************************************************************** 00023960
*        * Routine to deactivate the subsystem                        * 00023970
*        * No entry conditions                                        * 00023980
*        * On exit, R15 is as set by SSISERV                          * 00023990
*        ************************************************************** 00024000
                                                                        00024010
         USING (STATIC,STATIC_END),R11                                  00024020
         USING WORKAREA,R8,R7                                           00024030
         using twtoarea,twtowork                                        00024040
         USING LMAB,ANCHOR             Map anchor block                 00024050
DEACTIV8_SUBSYSTEM  EQU  *                                              00024060
         M4RSSR SAVE,ID=MTDE                                            00024070
                                                                        00024080
         LA    R1,=CL8'DEACTIV'        * ==> SSISERV function           00024090
         SR    R2,R2                   * (No GET/PUTUSER1 arg)          00024100
         SR    R3,R3                                                    00024110
         MVI   SSI_MSG,C'Y'            * Set 'Message on non-zero RC'   00024120
         BAL   R14,CALL_SSISERV        * Go invoke SSI Services         00024130
                                                                        00024140
         M4RSSR RESTORE,                Restore caller's registers     +00024150
               KEEP=(R15,R1)            .. except what he needs         00024160
         BR    R14                     * Return to caller               00024170
                                                                        00024180
         DROP                                                           00024190
*        ************************************************************** 00024200
*        * Routine to invoke the SSI Services program                 * 00024210
*        * On entry, R1 addresses the function character string       * 00024220
*        *           R2 is 0 or GET/PUTUSER1 address                  * 00024230
*        *           R3 eq 0 = 'Message on non-zero RC'               * 00024240
*        *           R3 ne 0 = 'No message on non-zero RC'            * 00024250
*        * On exit, R15 is as set by SSI Services                     * 00024260
*        *          (message put out dependent on entry R3)           * 00024270
*        ************************************************************** 00024280
         USING (STATIC,STATIC_END),R11                                  00024290
         USING WORKAREA,R8,R7                                           00024300
         using twtoarea,twtowork                                        00024310
         USING LMAB,ANCHOR             Map anchor block                 00024320
CALL_SSISERV  EQU   *                                                   00024330
         M4RSSR SAVE,ID=MTRS                                            00024340
         LR    R4,R1                   * Save A(Required function)      00024350
                                                                        00024360
         CALL  M4LMSSSR,               * Invoke SSI Services           +00024370
               ((R4),                  * Function required             +00024380
               LMAB,                   * Subsystem Anchor Block        +00024390
               LMAB_SSID,              * Subsystem id                  +00024400
               SSISERV_RETCODE,        * Service RC                    +00024410
               SSISERV_REASON,         * Service Reason code           +00024420
               (R2),                   * PUT/GETUSER1/function#        +00024430
               (R3)),                  * Function address/null         +00024440
               MF=(E,PLIST)            * L-form plist in w/storage      00024450
                                                                        00024460
         LTR   R2,R15                  * Branch if                      00024470
         JZ    CALLSSI_EXIT            * .. function worked             00024480
* !! (dev note @ 4.9) - comment out ins. above for cheap msg test       00024490
         CLI   SSI_MSG,C'Y'            * Branch if                      00024500
         JNE   CALLSSI_EXIT            * .. message not required        00024510
* !! (dev note @ 4.9) - comment out ins. above for cheap msg test       00024520
                                                                        00024530
         MVC   @CHAR32B(8),=C'M4LMSSSR' * @B Name of program            00024540
         MVC   @CHAR32A(8),0(R4)       * @A Function                    00024550
         MVC   @HEX1,SSISERV_RETCODE   * @8 Return code                 00024560
         MVC   @HEX2,SSISERV_REASON    * @9 Reason code                 00024570
         LA    R0,21                   * Message no.                    00024580
         BRAS  R14,MSGLIVE             * Issue message                  00024590
         LR    R15,R2                  * Re-get SSISERV RC              00024600
                                                                        00024610
CALLSSI_EXIT  EQU   *                                                   00024620
         M4RSSR RESTORE,                Restore caller's registers     +00024630
               KEEP=(R15,R1)            .. except what he needs         00024640
         BR    R14                     * Return to caller               00024650
         DROP                                                           00024660
                                                                        00024670
         USING (STATIC,STATIC_END),R11                                  00024680
STATIC   DC    A(&M4SECT)                                               00024690
                                                                        00024700
         LTORG                                                          00024710
                                                                        00024720
CSA_AVL    M4AVL CONTROL,KEYL=V,KEYO=10,POINTO=0                        00024730
CSA_AVLL   EQU   *-CSA_AVL                                              00024740
ENFPROT  ENFREQ ACTION=LISTEN,MF=L                                      00024750
ENFPROTL EQU   *-ENFPROT                                                00024760
                                                                        00024770
         USING WORKAREA,R8,R7                                           00024780
         USING LMAB,ANCHOR             Map anchor block                 00024790
MVC_TOKEN MVC   LMAB_NT_NAME(0),0(R6)                                   00024800
PACK     PACK  DWORD,0(0,R6)                                            00024810
MVCCPF   MVC   CPF+2(0),0(R6)                                           00024820
         USING CIB,R10                                                  00024840
OC       OC    DWORD(0),CIBDATA         Copy to work area               00024850
         DROP  R10                                                      00024860
OCSSI    OC    DWORD(0),0(R15)          Copy to work area               00024870
         DROP  R8,R7                                                    00024880
createOption    dc a(ISGLCRT_PRIVATE)                                   00024890
numberOfLatches dc f'2'                                                 00024900
latchSetName    dc cl48'&M4SECT Unicom Licence Manager latches'         00024910
latchNumber     dc f'0'                                                 00024920
synchronous     dc a(ISGLOBT_SYNC)                                      00024930
exclusive       dc a(ISGLOBT_EXCLUSIVE)                                 00024940
shared          dc a(ISGLOBT_SHARED)                                    00024950
unconditional   dc a(ISGLREL_UNCOND)                                    00024960
requestorID     dc cl8'&M4SECT'                                         00024970
TRT      TRT   0(0,R6),NUMERIC                                          00024980
BANG     EX    R0,*                                                     00024990
         DS    0D                                                       00025000
ONEDAY   DC    XL8'141dd760000'                                       
ONEHOUR  DC    XL8'D693A4000'
ONEMIN   DC    XL8'39387000'
PATCH    DC    100S(*-PATCH)                                            00025020
                                                                        00025030
NUMERIC  DC    256X'FF'                                                 00025040
         ORG   NUMERIC+C'0'                                             00025050
         DC    16X'0'                                                   00025060
         ORG                                                            00025070
                                                                        00025080
ENQPROT  ENQ   (,,E,,SYSTEM),                                          +00025090
               RET=HAVE,MF=L                                            00025100
ENQPROTL EQU   *-ENQPROT                                                00025110
NT_LVL   DC    A(IEANT_SYSTEM_LEVEL)    System Level Name/Token         00025120
NT_PERS  DC    A(IEANT_PERSIST)         Persistent Name/Token           00025130
NT_NOPERS  DC  A(IEANT_NOPERSIST)       Non-persistent Name/Token       00025140
                                                                        00025150
ETDEF    ETDEF TYPE=INITIAL                                             00025160
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=YES                   00025170
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=YES                   00025180
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=YES                   00025190
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=YES                   00025200
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=NO                    00025210
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=YES                   00025220
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=YES                   00025230
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=NO,EK=0               00025240
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=NO,EK=0               00025250
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=NO                    00025260
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=NO                    00025270
         ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,SSWITCH=YES                   00025280
         ETDEF TYPE=FINAL                                               00025290
ETDEFLN  EQU   *-ETDEF                                                  00025300
ATTACHXP ATTACHX EPLOC=*,SZERO=YES,ECB=*,SF=L                           00025310
ATTACHXPL EQU  *-ATTACHXP                                               00025320
DDLICENSE DC   C'DD:LIFILES',X'00'                                      00025330
PPA      CEEPPA ,                      * Prolog area                    00025340
*???     DC    V(CEESG001)   LE signature for LE init                   00025350
         DC    V(CEESG003)   C signature for LE init                    00025360
*???     DC    V(CEESG005)   Cobol signature for LE init                00025370
*???     DC    V(CEESG012)   Berkeley sockets signature for LE init     00025380
*???     DC    V(CEESG015)   Assembler signature for LE init            00025390
decode_tab   dc 256yl1(*-decode_tab)                                    00025400
         org   decode_tab+X'20'                                         00025410
            dc c' '                                                     00025420
         org   decode_tab+X'2F'                                         00025430
            dc c'/'                                                     00025440
         org   decode_tab+x'40'                                         00025450
            dc c'@'                                                     00025460
         org   decode_tab+x'25'                                         00025470
            dc c'%'                                                     00025480
         org   decode_tab+x'29'                                         00025490
            dc c')'                                                     00025500
         org   decode_tab+x'28'                                         00025510
            dc c'('                                                     00025520
         org   decode_tab+x'26'                                         00025530
            dc c'&&'                                                    00025540
         org   decode_tab+x'23'                                         00025550
            dc c'#'                                                     00025560
         org   decode_tab+x'5f'                                         00025570
            dc c'_'                                                     00025580
         org   decode_tab+x'2d'                                         00025590
            dc c'-'                                                     00025600
         org   decode_tab+x'2b'                                         00025610
            dc c'+'                                                     00025620
         org   decode_tab+x'21'                                         00025630
            dc c'!'                                                     00025640
         org   decode_tab+x'24'                                         00025650
            dc c'½'                                                     00025660
         org   decode_tab+x'22'                                         00025670
            dc c'"'                                                     00025680
         org   decode_tab+x'27'                                         00025690
            dc c''''                                                    00025700
         org   decode_tab+x'2a'                                         00025710
            dc c'*'                                                     00025720
         org   decode_tab+x'2c'                                         00025730
            dc c','                                                     00025740
         org   decode_tab+x'2e'                                         00025750
            dc c'.'                                                     00025760
         org   decode_tab+x'3a'                                         00025770
            dc c':'                                                     00025780
         org   decode_tab+x'3b'                                         00025790
            dc c';'                                                     00025800
         org   decode_tab+x'3E'                                         00025810
            dc c'>'                                                     00025820
         org   decode_tab+x'3c'                                         00025830
            dc c'<'                                                     00025840
         org   decode_tab+x'3f'                                         00025850
            dc c'?'                                                     00025860
         org   decode_tab+x'30'                                         00025870
            dc c'5678901234'                                            00025880
         org   decode_tab+x'41'                                         00025890
            dc c'NOPQRSTUVWXYZABCDEFGHIJKLM'                            00025900
         org   decode_tab+x'61'                                         00025910
            dc c'nopqrstuvwxyzabcdefghijklm'                            00025920
         org   ,                                                        00025930
CERTBUFF DS   0D                                                        00025940
        COPY  M4LMCERT                                                  00025950
                                                                        00025960
STATIC_END DS 0D                                                        00025970
                                                                        00025980
                                                                        00025990
ENVIR_ERROR    EQU  24                                                  00026000
PARMS_ERROR    EQU  8                                                   00026010
         CEEDSA ,                      * Map CEE DSA prolog             00026020
CEESAVE  DS    9D                                                       00026030
CEETERM  CEETERM MF=L                                                   00026040
PLIST2   DS    32D                                                      00026050
RETVAL   DS    F                                                        00026060
RETCODE  DS    F                                                        00026070
RSNCODE  DS    F                                                        00026080
RSSB1    DS    0D,XL(RSSBL)                                             00026090
DSASIZE  EQU   *-CEEDSA                                                 00026100
WORKAREA DSECT                                                          00026110
         DS    18F                                                      00026120
days     DS    F                                                        00026130
drdays   DS    F                                                        00026140
LE_STACK DS    F                                                        00026150
                                                                        00026160
subsystem_active ds c                                                   00026170
                                                                        00026180
WS_SSREQ_PARM DS    A         parmlist for IEFSSREQ                     00026190
WS_SSIB       DS    CL(SSIBSIZE)                                        00026200
WS_SSOB       DS    CL(SSOBHSIZ)                                        00026210
WS_SSVS       DS    CL(SSVSSIZE)                                        00026220
                                                                        00026230
BLDLLIST DS   0H                   BLDL Parameter List ...              00026240
BLDLNENT DC    H'1'                 ... No. of Entries in List          00026250
BLDLDELN DC    H'58'                ... Length of one Entry             00026260
BLDLDE   Ds   0CL58        -----.   ... Directory Entry ...             00026270
BLDLDENM DC    CL8' '           |         ... Program Name              00026280
         DC    XL50'00'    ---. |         ... Rest of Entry             00026290
      ORG   BLDLDE+24         | |                                       00026300
BLDLESIZ DS    FL3            | |         ... Program Size              00026310
      ORG   BLDLDE+33         | |                                       00026320
BLDLEMOD DS    AL1            | |         ... AMode/RMode               00026330
BLDLRANY  EQU   X'10'         | |              ... RMode ANY            00026340
      ORG   ,                 V V                                       00026350
                                                                        00026360
LOADWK   LOAD  SF=L                List Form of LOAD Macro              00026370
                                                                        00026380
latchwork       ds 32d                                                  00026390
latchecb        dc a(0)                                                 00026400
latchToken      ds xl8                                                  00026410
latchSetToken   dc xl8'0'                                               00026420
returncode ds f                                                         00026430
RSSBL    EQU   8192                    Length of our M4RSSB(s)          00026440
RSSB1A   DS    A                       Address of 1st RSSB              00026450
DWORD    DS    2D                                                       00026460
LXRES    LXRES LXLIST=LXLIST,SYSTEM=YES,MF=L                            00026470
LXLIST   DS    2F                                                       00026480
TKLIST   DS    2F                                                       00026490
ETCON    ETCON TKLIST=TKLIST,                                          c00026500
               LXLIST=LXLIST,MF=L                                       00026510
                                                                        00026520
ATTACHXL ATTACHX EPLOC=*,              List-form ATTACHX               +00026530
               ECB=*,SF=L                                               00026540
ATTACHPL DS    D                                                        00026550
                                                                        00026560
ETDES    ETDES MF=L                                                     00026570
                                                                        00026580
         IARV64 MF=(L,Iarv64)                                           00026590
RLISTPTR    DS   AD       Pointer to the IARV64 Parmlist                00026600
                                                                        00026610
                                                                        00026620
OLD_LICENSE DS 7D                                                       00026630
                                                                        00026640
STIMERL  STIMERM SET,MF=L              List-form STIMERM                00026650
STIMER_ID  DS  F                       Id of STIMER request             00026660
STIMER_ID2 DS  F                       Id of STIMER request             00026670
STIMER_ID3 DS  F                       Id of STIMER request             00026680
STIMER_PARM DS  F                      STIMER exit parm                 00026690
                                                                        00026700
OLD_SS0A@ DS    F                                                       00026740
OLD_DSGET@ DS   F                                                       00026750
                                                                        00026760
EXIT_RC  DS    F                                                        00026770
                                                                        00026780
NT_RETC  DS    F                                                        00026790
                                                                        00026800
FWORD    DS    F                                                        00026810
                                                                        00026820
CHECKSUM DS    F                                                        00026830
                                                                        00026840
NT       LMTK  FUNC=NODSECT                                             00026850
                                                                        00026860
ECBLIST  DS    10F                                                      00026870
ECB      DS    F                                                        00026880
                                                                        00026890
ENQL     DS    CL(ENQPROTL)        List-form ENQ macro                  00026900
ESTAEXL  ESTAEX *,PARAM=*,MF=L     List-form ESTAEX                     00026910
                                                                        00026920
ETD      ETDEF TYPE=INITIAL                                             00026930
FIRST    ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0                               00026940
SECOND   ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0                               00026950
THIRD    ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0                               00026960
FOURTH   ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0                               00026970
FIFTH    ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0                               00026980
SIXTH    ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0                               00026990
SEVENTH  ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0                               00027000
EIGHTH   ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,EK=0                          00027010
NINETH   ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0,EK=0                          00027020
TENTH    ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0                               00027030
ELEVENTH ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0                               00027040
TWELTH   ETDEF TYPE=ENTRY,ROUTINE=0,AKM=0                               00027050
         ETDEF TYPE=FINAL                                               00027060
*                                                                       00027070
SSRVPARM M4LMSSSR DEFINE                                                00027080
*                                                                       00027090
SSISERV_RETCODE   DS  A                *                                00027100
SSISERV_REASON    DS  A                *                                00027110
SSI_MSG  DS    C                                                        00027120
*                                                                       00027130
RETRYP   DS    0D,(RETPARML)X                                           00027140
RETREGS2 DS    9D                                                       00027150
                                                                        00027160
SERVER_TCB@    DS   F                                                   00027170
SERVER_TECB    DS   F                                                   00027180
PLIST    DS    32D                                                      00027200
                                                                        00027210
RM_PM          DS  0XL8                RESMGR ADD Parameter(s)          00027220
RM_PM_ASCB     DS   A                  ... ASCB address                 00027230
               DS   F                                                   00027240
TIME     TIME  MF=L,LINKAGE=SYSTEM                                      00027250
ENFREQL  DS    XL(ENFPROTL)                                             00027260
DTOKEN   DS    F'0'                                                     00027270
ENFLADDR DS    F'0'                                                     00027280
ENFPTR     DC    F'0'                                                   00027290
                                                                        00027300
RESMGRL  RESMGR ADD,MF=L                                                00027310
                                                                        00027320
         CPF MF=(L,CPFLIST)                                             00027330
CPF      DS    CL10                                                     00027340
DRCOPY   DS    XL(LMDR_LEN)                                             00027350
AVL@COPY DS    F                                                        00027360
avlp     ds    a                                                        00027370
         M4AVL NOSECT                                                   00027380
DailyCounts DS 2D                                                       00027390
HourlyCounts DS 2D                                                      00027400
         COPY  LMMSGMAP                                                 00027410
ANCHOR   DS    0D,(LMAB_LENGTH)X                                        00027420
TWTOWORK   DS  XL500                                                    00027430
ErrorMsg   DS  XL1024                                                   00027440
SMFRCD   DS    0D                     SMF record area                   00027450
SMFRLEN  DS    H                      Record length                     00027460
SMFRSEG  DS    H                      Segment descriptor                00027470
SMFRFLAG DS    XL1                    System indicator                  00027480
SMFRTYPE DS    AL1                    SMF record type                   00027490
SMFRTIME DS    XL4                    Time, in hundredths of a second   00027500
SMFRDATE DS    PL4                    Date, in form 00YYDDDF            00027510
SMFRSID  DS    CL4                    System identification             00027520
SMFRSSI  DS    CL4                    Subsystem identification          00027530
SMFRSTYP DS    AL2                    record subtype                    00027540
SMFRSTCK DS    DL8                    STCKE(8) of period start          00027550
SMFRCURR DS    FL4                    currently active count            00027560
SMFRHOUR DS    FL4                    hour total                        00027570
SMFRDAY  DS    FDL8                   day total                         00027580
         DS    XL32                   Reserved                          00027590
SMFRDLEN DS    AL2                    product string length             00027600
SMFRCDL  EQU   *-SMFRCD                                                 00027610
SMFRPROD DS    256X                   product string                    00027620
                                                                        00027630
WORKLEN  EQU   *-WORKAREA                                               00027640
                                                                        00027650
LMAB     LMAB   FUNC=DSECT                                              00027660
LMDS     LMDS   FUNC=DSECT                                              00027670
LMDR     LMDR   FUNC=DSECT                                              00027680
SS0A     LMSS0A FUNC=DSECT                                              00027690
LMBAR    LMBAR FUNC=DSECT                                               00027700
DSGT     LMDSGT FUNC=DSECT                                              00027710
REST     LMREST FUNC=DSECT                                              00027720
*ENDP    LMENDP FUNC=DSECT                                              00027730
RESM     LMRESM FUNC=DSECT                                              00027740
SR01     LMSR01 FUNC=DSECT                                              00027750
ENFL     LMENFL FUNC=DSECT                                              00027760
                                                                        00027770
TASKBLOK LMTSKB FUNC=DSECT                                              00027780
                                                                        00027790
RET      LMRETP FUNC=DSECT                                              00027800
                                                                        00027810
         COPY  LMCMD                                                    00027820
                                                                        00027830
DSECT24  DSECT ,                                                        00027840
EXTRACTL EXTRACT MF=L                                                   00027850
ANSWER   DS    A                                                        00027860
         DS    0D                                                       00027870
LENGTH24 EQU   *-DSECT24                                                00027880
                                                                        00027890
         M4RSSB DSECT,VERSION=2                                         00027900
                                                                        00027910
         M4RSVB DSECT,VERSION=2                                         00027920
                                                                        00027930
         M4MSG2 DSECT=YES                                               00027940
                                                                        00027950
COM      DSECT                                                          00027960
         IEZCOM                                                         00027970
CIB      DSECT                                                          00027980
         IEZCIB                                                         00027990
         CVT   DSECT=YES,LIST=NO                                        00028000
         IHASDWA                                                        00028010
         IEANTASM ,                Name/Token Services EQUates          00028020
TIOT     DSECT                     Task ...                             00028030
         IEFTIOT1                   ... Input/Output Table              00028040
         IKJTCB DSECT=YES,LIST=YES Task Control Block                   00028050
         IHAPSA DSECT=YES          Prefixed Save Area                   00028060
         IEZJSCB                       * Job Step Control Block         00028070
                                                                        00028080
MABCSCB  DSECT                                                          00028090
         IEECHAIN                      Command Scheduling C/block       00028100
         CEECAA                        Map Common Anchor Area           00028110
         YREGS                                                          00028120
         IEESMCA                       SMCA                             00028130
                                                                        00028140
         BPXYCONS   ,                                                   00028150
         ISGLMASM                                                       00028160
         IHAASCB DSECT=YES             Address Space Control Block      00028170
         IHAASSB ,                     Address Space Secondary Block    00028180
         IEFENFCT                                                       00028190
         IEFENFPM                                                       00028200
         IEFJESCT ,                JES Communication Table              00028210
         IEFJSCVT ,                Subsystem communication vector tab   00028220
         IEFJSSVT ,                Subsystem vector table               00028230
         IEFJSSOB VS,CONTIG=NO                                          00028240
         IEFJSSIB                                                       00028250
         END                                                            00028260
